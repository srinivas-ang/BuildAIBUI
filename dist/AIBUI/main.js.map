{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/addclient/addclient.component.html","./src/app/components/addclient/viewclient/viewclient.component.html","./src/app/components/credittransaction/credittransaction.component.html","./src/app/components/home/home.component.html","./src/app/components/home/teaminformaton/teaminformaton.component.html","./src/app/components/login/login.component.html","./src/app/components/pitchcreation/pitchcreation.component.html","./src/app/components/relationshipcreation/relationshipcreation.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/common/roles.enum.ts","./src/app/components/addclient/addclient.component.css","./src/app/components/addclient/addclient.component.ts","./src/app/components/addclient/viewclient/viewclient.component.css","./src/app/components/addclient/viewclient/viewclient.component.ts","./src/app/components/credittransaction/credittransaction.component.css","./src/app/components/credittransaction/credittransaction.component.ts","./src/app/components/home/home.component.css","./src/app/components/home/home.component.ts","./src/app/components/home/teaminformaton/teaminformaton.component.css","./src/app/components/home/teaminformaton/teaminformaton.component.ts","./src/app/components/login/login.component.css","./src/app/components/login/login.component.ts","./src/app/components/pitchcreation/pitchcreation.component.css","./src/app/components/pitchcreation/pitchcreation.component.ts","./src/app/components/relationshipcreation/relationshipcreation.component.css","./src/app/components/relationshipcreation/relationshipcreation.component.ts","./src/app/config.ts","./src/app/material/material.module.ts","./src/app/pipes/listfilter.pipe.ts","./src/app/services/addclient.service.ts","./src/app/services/credittransaction.service.ts","./src/app/services/login.service.ts","./src/app/services/pitchcreation.service.ts","./src/app/services/snackbar.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<mat-toolbar class=\\\"bg_primary\\\" color='primary'>\\r\\n  <!-- <img width='78px' src=\\\"../aib.png\\\"> -->\\r\\n  <div class=\\\"row mx-0 w-100\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <label>CIB - Documentum</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\" *ngIf=\\\"userDetails\\\">\\r\\n        <!-- <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button> -->\\r\\n        <mat-menu #menu=\\\"matMenu\\\" direction=\\\"down\\\" yPosition=\\\"below\\\" (mouseleave)=\\\"levelOneTrigger.closeMenu()\\\">\\r\\n          <button mat-menu-item>Profile</button>\\r\\n          <button mat-menu-item (click)=\\\"logout()\\\">Logout</button>\\r\\n        </mat-menu>\\r\\n      <div class=\\\"row float-right\\\" [matMenuTriggerFor]=\\\"menu\\\" #levelOneTrigger=\\\"matMenuTrigger\\\" (mouseenter)=\\\"levelOneTrigger.openMenu()\\\">\\r\\n        <div class=\\\"mr-1\\\">\\r\\n          <mat-icon class=\\\"mt-1\\\">person_pin</mat-icon>\\r\\n        </div>\\r\\n        <div class=\\\"\\\">\\r\\n          <label>{{userDetails.UserName}}</label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n\\r\\n<router-outlet></router-outlet>\"","export default \"<div>\\r\\n    <div class=\\\"row mx-0 mt-3 mb-3\\\">\\r\\n        Can't find your client in Documentum? Please search the Salesforce Clients List below or navigate to Salesforce\\r\\n        to add the Client to Documentum.\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"searchForm\\\">\\r\\n        <div class=\\\"row mx-0\\\">\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n                <mat-form-field class=\\\"w-100 \\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"searchText\\\" matInput placeholder=\\\"Client Search\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <div *ngIf=\\\"getSearchText.touched && getSearchText.value !='' && getSearchText.errors?.minlength\\\"\\r\\n                    class=\\\"mb-3 text-danger\\\">\\r\\n                    Your search term must have 2 or more characters.\\r\\n                </div>\\r\\n                <div *ngIf=\\\"(getSearchText.touched || !isValidFormSubmitted) && getSearchText.errors?.required\\\"\\r\\n                    class=\\\"mb-3 text-danger\\\">\\r\\n                    Client Name/WCIS ID required.\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 mt-2\\\">\\r\\n                <mat-spinner-button style=\\\"border-radius: 5px\\\" class=\\\"text-left\\\"\\r\\n                    [options]=\\\"clientSpinnerButtonOptions\\\" (btnClick)=\\\"searchClientDetails()\\\"></mat-spinner-button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <div class=\\\"mb-5\\\" [ngStyle]=\\\"{'display': display}\\\">\\r\\n        <div class=\\\"row mx-0\\\" style=\\\"max-height: 330px;overflow-y: scroll;\\\">\\r\\n        <mat-table [dataSource]=\\\"searchResult\\\" class=\\\"example-table w-100\\\" matSort>\\r\\n            <!-- Number Column -->\\r\\n            <ng-container matColumnDef=\\\"action\\\">\\r\\n                <mat-header-cell *matHeaderCellDef style=\\\"max-width: 7em;\\\" class=\\\"text-white\\\">Action</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\" style=\\\"max-width: 6em;\\\">\\r\\n                    <!-- <mat-icon matTooltip=\\\"View\\\" (click)=\\\"viewClienDetails(row)\\\" class=\\\"cursor-pointer text-primary\\\">remove_red_eye</mat-icon> -->\\r\\n                    <a *ngIf=\\\"row.wcisId !=''\\\" class=\\\"cursor-pointer\\\" (click)=\\\"viewClienDetails(row)\\\">View</a>\\r\\n                    <a *ngIf=\\\"row.wcisId == ''\\\" class=\\\"cursor-pointer\\\" (click)=\\\"viewClienDetails(row)\\\">Add</a>\\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n             <!-- State Column -->\\r\\n             <ng-container matColumnDef=\\\"clientName\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-white\\\">Client Name</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">{{ row.clientName }}</mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Title Column -->\\r\\n            \\r\\n\\r\\n            <ng-container matColumnDef=\\\"industry\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-white\\\">\\r\\n                    Industry\\r\\n                </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">{{ row.industry }}</mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"city\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-white\\\">\\r\\n                    City\\r\\n                </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">{{ row.city }}</mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"state\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-white\\\">\\r\\n                    State\\r\\n                </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">{{ row.state }}</mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"taxId\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-white\\\">\\r\\n                    Tax Id\\r\\n                </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">{{ row.taxId }}</mat-cell>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"wcisId\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-white\\\">WCIS ID</mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">{{ row.wcisId }}</mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- Created Column -->\\r\\n            <!-- <ng-container matColumnDef=\\\"Sponsor\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-white\\\">\\r\\n                    Sponsor\\r\\n                </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">{{ row.Sponsor }}</mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"tickerSymbol\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-white\\\">\\r\\n                    Ticker Symbol\\r\\n                </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\">{{ row.tickerSymbol }}</mat-cell>\\r\\n            </ng-container> -->\\r\\n           \\r\\n           \\r\\n           \\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"bg_primary \\\" style=\\\"border-radius: 10px;position: sticky !important;top: 0 !important;\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" style=\\\"border-radius: 10px; border: whitesmoke 1px solid;\\\"></mat-row>\\r\\n        </mat-table>\\r\\n    </div>\\r\\n    <div class=\\\"row mx-0\\\">\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20, 50]\\\" [pageSize]=\\\"50\\\" showFirstLastButtons class=\\\"container card\\\" style=\\\"border-radius: 10px\\\"></mat-paginator>\\r\\n    </div>\\r\\n</div>\\r\\n    <div class=\\\"alert alert-warning border mx-0 text-center\\\" *ngIf=\\\"!isDataFound\\\">\\r\\n        <label>Please navigate to salesforce to create the client.</label>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row mx-0\\\">\\r\\n        <span class=\\\"col-sm-11 font-weight-bold\\\">View Client Details</span>\\r\\n        <mat-icon class=\\\"float-right col-sm-1 text-right cursor-pointer\\\" (click)=\\\"closeDialog()\\\">close</mat-icon>\\r\\n            </div>\\r\\n            <hr/>\\r\\n<div class=\\\"row mx-0\\\">\\r\\n    <div class=\\\"col-sm-3 card p-0 mr-2\\\">\\r\\n        <div class=\\\"border-bottom p-1 font-weight-bold\\\">\\r\\n            Repository Browser<mat-icon class=\\\"float-right font-weight-bold\\\" >arrow_downward</mat-icon>\\r\\n        </div>\\r\\n        <div class=\\\"ml-3 mt-2\\\">\\r\\n        <div>\\r\\n                <mat-icon class=\\\"text-warning mr-2\\\">folder</mat-icon>ABF\\r\\n        </div>\\r\\n        <div class=\\\"ml-2 mt-2 pl-3\\\">\\r\\n                <mat-icon class=\\\"text-warning mr-2\\\">folder</mat-icon> Clients\\r\\n        </div>\\r\\n        <div class=\\\"ml-4 mt-2 pl-4\\\">\\r\\n                <mat-icon class=\\\"text-warning mr-2\\\">folder</mat-icon>Energy & Power\\r\\n        </div>\\r\\n        <div class=\\\"ml-5 mt-2 pl-4\\\">\\r\\n                <mat-icon class=\\\"text-warning mr-2\\\">folder</mat-icon>Othello Golf\\r\\n        </div>\\r\\n        <div class=\\\"ml-5 pl-5 mr-2 mt-2\\\"  *ngFor=\\\"let item of sampleData\\\">\\r\\n                <mat-icon class=\\\"text-warning mr-2\\\" *ngIf=\\\"!item.IsFolder\\\"> insert_drive_file</mat-icon>\\r\\n                <mat-icon class=\\\"text-warning mr-2\\\" *ngIf=\\\"item.IsFolder\\\">folder</mat-icon>\\r\\n                {{item.Name}}\\r\\n        </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-5 card p-0 mr-2\\\">\\r\\n        <div class=\\\"p-1 font-weight-bold border-bottom\\\">\\r\\n            ABG> Client > Energy & Power > Othello Golf\\r\\n        </div>\\r\\n        <div class=\\\"row mx-0 border-bottom\\\">\\r\\n            <div class=\\\"col-sm-4 border-right\\\">\\r\\n                Name\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 border-right\\\">\\r\\n                Modified Date\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n                Modified By\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mx-0 border-bottom\\\" *ngFor=\\\"let item of sampleData\\\">\\r\\n            <div class=\\\"col-sm-4 border-right\\\">\\r\\n{{item.Name}}\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4 border-right\\\">\\r\\n{{item.ModifiedDate}}\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n{{item.ModifiedBy}}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm card font-weight-bold p-0\\\">\\r\\n            <div class=\\\"border-bottom p-1\\\">\\r\\n                    View Client\\r\\n                </div>\\r\\n            <app-relationshipcreation [childToMaster]=master></app-relationshipcreation>\\r\\n    </div>\\r\\n</div>\"","export default \"<div id=\\\"main-content\\\" class=\\\"mt-3 mb-5\\\">\\r\\n    <div class=\\\" mt-4 ml-2\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <form class=\\\"\\\" [formGroup]=\\\"creditTransactionForm\\\" #myForm=\\\"ngForm\\\">\\r\\n                <div class=\\\"row mx-0\\\">\\r\\n                    <mat-form-field class=\\\"w-100 \\\">\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"CreditActionName\\\" matInput placeholder=\\\"Credit Action Name\\\"\\r\\n                            required>\\r\\n                    </mat-form-field>\\r\\n                    <div class=\\\"text-danger\\\"\\r\\n                        *ngIf=\\\"f.CreditActionName.invalid && f.CreditActionName.errors.required && isSubmitted\\\">\\r\\n                        Credit Action Name Required.\\r\\n                    </div>\\r\\n                    <mat-form-field class=\\\"w-100\\\">\\r\\n                        <input matInput [matDatepicker]=\\\"picker\\\" [min]='minDate' formControlName=\\\"CreditActionDate\\\"\\r\\n                            placeholder=\\\"Credit Action Date\\\" required>\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"> </mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <div class=\\\"text-danger\\\"\\r\\n                        *ngIf=\\\"f.CreditActionDate.invalid && f.CreditActionDate.touched && f.CreditActionDate.errors?.matDatepickerMin\\\">\\r\\n                        Selected Credit Action Date is less than today date.\\r\\n                    </div>\\r\\n                    <div class=\\\"text-danger\\\"\\r\\n                        *ngIf=\\\"f.CreditActionDate.invalid && f.CreditActionDate.errors.required && (f.CreditActionDate.touched || isSubmitted)\\\">\\r\\n                        Credit Action date Required.\\r\\n                    </div>\\r\\n                    <fieldset class=\\\"mt-2 mb-2 w-100 fieldset_style\\\">\\r\\n                        <legend class=\\\"px-1 ml-2 legend_style\\\"> Credit Transacion Information</legend>\\r\\n                        <fieldset class=\\\"mt-2 mb-2 mx-2 fieldset_style\\\">\\r\\n                            <legend class=\\\"px-1 ml-2 legend_style\\\">Relationship Information</legend>\\r\\n                            <div class=\\\"mx-4\\\">\\r\\n                                <mat-form-field class=\\\"w-100\\\">\\r\\n                                    <mat-label>Industry</mat-label>\\r\\n                                    <mat-select formControlName=\\\"Industry\\\" [multiple]=\\\"false\\\">\\r\\n                                        <mat-option>\\r\\n                                            <ngx-mat-select-search [placeholderLabel]=\\\"'Search industry'\\\"\\r\\n                                                [formControl]=\\\"industrySearchCtrl\\\"\\r\\n                                                [noEntriesFoundLabel]=\\\"'no matching team found'\\\">\\r\\n                                            </ngx-mat-select-search>\\r\\n                                        </mat-option>\\r\\n                                        <mat-option\\r\\n                                            *ngFor=\\\"let industry of industryJson | listfilter:industrySearchText \\\"\\r\\n                                            [value]=\\\"industry.Value\\\">\\r\\n                                            {{industry.Name}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                                <div class=\\\"text-danger\\\"\\r\\n                                    *ngIf=\\\"f.Industry.invalid && f.Industry.errors.required && isSubmitted\\\">\\r\\n                                    Industry Required.\\r\\n                                </div>\\r\\n                                <mat-form-field class=\\\"w-100\\\">\\r\\n                                    <mat-label>Client Name</mat-label>\\r\\n                                    <mat-select formControlName=\\\"ClientName\\\" [multiple]=\\\"false\\\">\\r\\n                                        <mat-option>\\r\\n                                            <ngx-mat-select-search [placeholderLabel]=\\\"'Search client name'\\\"\\r\\n                                                [formControl]=\\\"clientNameSearchCtrl\\\"\\r\\n                                                [noEntriesFoundLabel]=\\\"'no matching client found'\\\">\\r\\n                                            </ngx-mat-select-search>\\r\\n                                        </mat-option>\\r\\n                                        <mat-option\\r\\n                                            *ngFor=\\\"let client of clientNamesJson | listfilter:clientNameSearchText\\\"\\r\\n                                            [value]=\\\"client.Value\\\">\\r\\n                                            {{client.Name}}\\r\\n                                        </mat-option>\\r\\n\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                                <div class=\\\"text-danger\\\"\\r\\n                                    *ngIf=\\\"f.ClientName.invalid && f.ClientName.errors.required && isSubmitted\\\">\\r\\n                                    Client Name Required.\\r\\n                                </div>\\r\\n                                <mat-form-field class=\\\"w-100\\\">\\r\\n                                    <mat-label>Report Type</mat-label>\\r\\n                                    <mat-select formControlName=\\\"ReportType\\\" [multiple]=\\\"false\\\">\\r\\n                                        <mat-option>\\r\\n                                            <ngx-mat-select-search [placeholderLabel]=\\\"'Search Report Type'\\\"\\r\\n                                                [formControl]=\\\"reportTypeSearchCtrl\\\"\\r\\n                                                [noEntriesFoundLabel]=\\\"'no matching report type found'\\\">\\r\\n                                            </ngx-mat-select-search>\\r\\n                                        </mat-option>\\r\\n                                        <mat-option\\r\\n                                            *ngFor=\\\"let report of reportTypesJson | listfilter:reportTypeSearchText\\\"\\r\\n                                            [value]=\\\"report.Value\\\">\\r\\n                                            {{report.Name}}\\r\\n                                        </mat-option>\\r\\n\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                                <div class=\\\"text-danger\\\"\\r\\n                                    *ngIf=\\\"f.ReportType.invalid && f.ReportType.errors.required && isSubmitted\\\">\\r\\n                                    Report Type Required.\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </fieldset>\\r\\n                        <fieldset class=\\\"mt-2 mb-2 mx-2 fieldset_style\\\">\\r\\n                            <legend class=\\\"px-1 ml-2 legend_style\\\">Product Information</legend>\\r\\n                            <div class=\\\"row mx-1\\\">\\r\\n                                <mat-icon (click)=\\\"addProductInfoForm()\\\"\\r\\n                                    class=\\\"float-right mx-4 mb-2 bg_primary cursor-pointer\\\"\\r\\n                                    *ngIf=\\\"!productInfoForm.invalid\\\">add</mat-icon>\\r\\n                                <mat-icon (click)=\\\"removeAllProductInfoForm()\\\" *ngIf=\\\"productInfoForm.length!=1\\\"\\r\\n                                    class=\\\"float-right mx-4 mb-2 bg_primary cursor-pointer\\\">close</mat-icon>\\r\\n                            </div>\\r\\n                            <div class=\\\"mx-4  mb-2 fieldset_style\\\"\\r\\n                                *ngFor=\\\"let productForm of productInfoForm.controls; let i=index\\\">\\r\\n                                <div [formGroup]=\\\"productForm\\\" class=\\\"row m-0 mt-1\\\">\\r\\n                                    <div class=\\\"col-sm-2 mt-1\\\">\\r\\n                                        <mat-form-field class=\\\"w-100\\\">\\r\\n\\r\\n                                            <input matInput formControlName=\\\"CPL1\\\" placeholder=\\\"CPL1\\\" aria-label=\\\"CPL1\\\"\\r\\n                                                (keyup)=\\\"cplKeyPress($event,i,'CPL1')\\\" [matAutocomplete]=\\\"autoCPL1\\\"\\r\\n                                                required>\\r\\n                                            <mat-autocomplete #autoCPL1=\\\"matAutocomplete\\\"\\r\\n                                                (optionSelected)='CPL1OnChange($event.option.value)'>\\r\\n                                                <mat-option *ngFor=\\\"let cpl1 of cpl1Json \\\" [value]=\\\"cpl1.Value\\\">\\r\\n                                                    {{cpl1.Name}}\\r\\n                                                </mat-option>\\r\\n                                            </mat-autocomplete>\\r\\n                                        </mat-form-field>\\r\\n                                        <div class=\\\"text-danger\\\"\\r\\n                                            *ngIf=\\\"productForm['controls'].CPL1.status!='VALID' && isSubmitted\\\">\\r\\n                                            CPL1 Required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-9 mt-1\\\" *ngIf=\\\"productForm['controls'].CPL1.status=='VALID'\\\">\\r\\n                                        <mat-form-field class=\\\"w-100\\\">\\r\\n\\r\\n                                            <input matInput formControlName=\\\"CPL2\\\" placeholder=\\\"CPL2\\\" aria-label=\\\"CPL2\\\"\\r\\n                                                (keyup)=\\\"cplKeyPress($event,i,'CPL2')\\\" [matAutocomplete]=\\\"autoCPL2\\\"\\r\\n                                                required>\\r\\n\\r\\n                                            <mat-autocomplete #autoCPL2=\\\"matAutocomplete\\\">\\r\\n                                                <mat-option *ngFor=\\\"let cpl2 of filteredCPL2 \\\" [value]=\\\"cpl2.Value\\\">\\r\\n                                                    {{cpl2.Name}}\\r\\n                                                </mat-option>\\r\\n                                            </mat-autocomplete>\\r\\n                                        </mat-form-field>\\r\\n                                        <div class=\\\"text-danger\\\"\\r\\n                                            *ngIf=\\\"productForm['controls'].CPL2.status!='VALID' && isSubmitted\\\">\\r\\n                                            CPL2 Required.\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-1 mt-3 text-danger cursor-pointer\\\">\\r\\n                                        <mat-icon (click)=\\\"removeProductInfoForm(i)\\\" *ngIf=\\\"i!=0\\\">close</mat-icon>\\r\\n\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </fieldset>\\r\\n                        <fieldset class=\\\"mt-2 mb-2 mx-2 fieldset_style\\\">\\r\\n                            <legend class=\\\"px-1 ml-2 legend_style\\\">Team Information</legend>\\r\\n                            <div class=\\\"mx-4 row\\\">\\r\\n                                <div class=\\\"col-sm\\\">\\r\\n                                    <angular2-multiselect formControlName=\\\"TeamInfo\\\" [data]=\\\"teamInfoJson\\\"\\r\\n                                        [settings]=\\\"teamInfoDropdownSettings\\\" >\\r\\n                                    </angular2-multiselect>\\r\\n\\r\\n\\r\\n                                    <div class=\\\"text-danger\\\" *ngIf=\\\"f.TeamInfo.invalid  && (f.TeamInfo.touched || isSubmitted)\\\">\\r\\n                                        TeamInfo Required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!-- <div class=\\\"card col-sm-4\\\" style=\\\"max-height: 150px;\\r\\n                                                overflow: auto;\\\" *ngIf=\\\"f.TeamInfo.valid\\\">\\r\\n                                    <label class=\\\"font-weight-bold\\\">Selected Team Info</label>\\r\\n                                    <label class=\\\"w-100 pl-3\\\" *ngFor=\\\"let team of f.TeamInfo?.value; let i=index;\\\">\\r\\n                                        <span>{{i+1}}. {{team.Name}}</span>\\r\\n                                    </label>\\r\\n                                </div> -->\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"mx-4 row mt-4\\\">\\r\\n                                <div class=\\\"col-sm\\\">\\r\\n                                    <mat-form-field class=\\\"w-100\\\">\\r\\n                                        <textarea style=\\\"height:100px\\\" readonly formControlName=\\\"AdditionalTeamInfo\\\"\\r\\n                                            matInput placeholder=\\\"Additional Credit Transaction Team\\\"></textarea>\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"card mb-3\\\">\\r\\n                                    <div>\\r\\n                                        <mat-icon (click)=\\\"openDialog()\\\" class=\\\"font-weight-bold cursor-pointer\\\"\\r\\n                                            style=\\\"color: forestgreen;\\\">more_vert</mat-icon>\\r\\n                                    </div>\\r\\n                                    <div>\\r\\n                                        <mat-icon (click)='clearAdditionalTeamInfo()'\\r\\n                                            class=\\\"font-weight-bold cursor-pointer\\\" style=\\\"color: forestgreen;\\\">close\\r\\n                                        </mat-icon>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!-- <div class=\\\"mx-5 row mt-4 mb-4\\\">\\r\\n                                <label>Corp Finn Involved : </label>\\r\\n                                <mat-radio-group class=\\\"ml-5\\\" aria-label=\\\"Corp Finn Involved\\\"\\r\\n                                    formControlName=\\\"CorpFinnInvolved\\\">\\r\\n                                    <mat-radio-button color=\\\"primary\\\" class=\\\"mr-4\\\" value=true>Yes</mat-radio-button>\\r\\n                                    <mat-radio-button color=\\\"primary\\\" value=false>No</mat-radio-button>\\r\\n                                </mat-radio-group>\\r\\n                            </div> -->\\r\\n                        </fieldset>\\r\\n                        <div class=\\\"mx-4 row mt-4\\\">\\r\\n                            <label>Legal Docs Information:</label>\\r\\n                            <div class=\\\"text-danger\\\">\\r\\n                                By selecting 'No' an 'Executed Legal Docs' subfolder will not be created for this Credit\\r\\n                                Transaction or mirrored into the 'Legal' folder\\r\\n                                once transacion is closed. Only select 'No' if you will not need to store executed legal\\r\\n                                documents related to this transaction.\\r\\n                            </div>\\r\\n                            <div class=\\\"mt-3\\\">\\r\\n                                <span>Executed Legal Docs subfolder required for this transaction?:</span>\\r\\n                                <span>\\r\\n                                    <mat-radio-group class=\\\"ml-5\\\" aria-label=\\\"Is Legal ExeDocs\\\"\\r\\n                                        formControlName=\\\"IsLegalExeDocs\\\" (change)=\\\"radioChange($event)\\\">\\r\\n                                        <mat-radio-button color=\\\"primary\\\" class=\\\"mr-4\\\" value=false>No</mat-radio-button>\\r\\n                                        <mat-radio-button color=\\\"primary\\\" value=true>Yes</mat-radio-button>\\r\\n                                    </mat-radio-group>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                            <fieldset class=\\\"w-100 mt-3 fieldset_style mb-3\\\">\\r\\n                                <div class=\\\"mx-4\\\">\\r\\n                                    <mat-form-field class=\\\"w-100 \\\">\\r\\n                                        <input type=\\\"text\\\" formControlName=\\\"FolderName\\\" matInput\\r\\n                                            placeholder=\\\"Folder Name\\\" required>\\r\\n                                    </mat-form-field>\\r\\n                                    <div class=\\\"text-danger\\\"\\r\\n                                        *ngIf=\\\"f.FolderName.invalid && f.FolderName.errors.required && isSubmitted\\\">\\r\\n                                        Folder Name Required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </fieldset>\\r\\n                        </div>\\r\\n                    </fieldset>\\r\\n                </div>\\r\\n                <div class=\\\"mr-2 mb-5\\\">\\r\\n                    <!-- {{isSubmitted}} -->\\r\\n                    \\t<!-- <button mat-raised-button  class=\\\" bg_primary float-right\\\" (click)=\\\"createCreditTransaction(myForm)\\\">\\r\\n                                <mat-icon *ngIf=\\\"isSubmitted\\\"><mat-spinner color=\\\"accent\\\" diameter=\\\"20\\\" >\\r\\n                        </mat-spinner></mat-icon>Submit\\r\\n                      </button> -->\\r\\n                    <mat-spinner-button style=\\\"border-radius: 5px\\\" class=\\\"text-left float-right\\\"\\r\\n                        [options]=\\\"pitchSpinnerButtonOptions\\\" (btnClick)=\\\"createCreditTransaction(myForm)\\\"></mat-spinner-button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"pt-2 px-5\\\">\\r\\n     <button type=\\\"button\\\" class=\\\"text-left col-sm-4 bg_primary\\\" color='primary' (mouseenter)=\\\"isShowContent=true\\\"\\r\\n          mat-raised-button>\\r\\n          <mat-icon>add</mat-icon> New\\r\\n          <mat-icon class=\\\"float-right mt-2\\\" *ngIf=\\\"!isShowContent\\\" matSuffix>keyboard_arrow_right</mat-icon>\\r\\n          <mat-icon class=\\\"float-right mt-2\\\" *ngIf=\\\"isShowContent\\\" matSuffix>keyboard_arrow_down</mat-icon>\\r\\n     </button>\\r\\n     <div class=\\\"row mx-0 mt-4\\\" *ngIf=\\\"isShowContent\\\">\\r\\n          <div class=\\\"col-sm-2 p-0 card menu_style\\\">\\r\\n               <mat-list role=\\\"list\\\" class=\\\"p-0\\\">\\r\\n                    <a (click)=\\\"menuSelectedOption=menuptions.PITCH_CREATION\\\" class=\\\"cursor-pointer\\\">\\r\\n                         <mat-list-item role=\\\"listitem\\\"  class=\\\"border_bottom\\\"\\r\\n                              [ngClass]=\\\"{'bg_primary': menuSelectedOption == menuptions.PITCH_CREATION}\\\">\\r\\n                              {{menuptions.PITCH_CREATION}}</mat-list-item>\\r\\n                    </a>\\r\\n                    <a (click)=\\\"menuSelectedOption=menuptions.STANDARD_FOLDER\\\" class=\\\"cursor-pointer\\\">\\r\\n                         <mat-list-item role=\\\"listitem\\\" class=\\\"border_bottom\\\"\\r\\n                              [ngClass]=\\\"{'bg_primary': menuSelectedOption == menuptions.STANDARD_FOLDER}\\\">\\r\\n                              {{menuptions.STANDARD_FOLDER}}</mat-list-item>\\r\\n                    </a>\\r\\n               \\r\\n                    <a (click)=\\\"menuSelectedOption=menuptions.CREDIT_TRANSACTION_FOLDER\\\" class=\\\"cursor-pointer\\\">\\r\\n                         <mat-list-item role=\\\"listitem\\\"  class=\\\"border_bottom\\\"\\r\\n                              [ngClass]=\\\"{'bg_primary': menuSelectedOption == menuptions.CREDIT_TRANSACTION_FOLDER}\\\">\\r\\n                              {{menuptions.CREDIT_TRANSACTION_FOLDER}}</mat-list-item>\\r\\n                    </a>\\r\\n                    \\r\\n                    <a (click)=\\\"menuSelectedOption=menuptions.RESTRICTED_FOLDER\\\" class=\\\"cursor-pointer\\\" *ngIf=\\\"userRoles.ADMIN == app.userDetails.Role\\\">\\r\\n                         <mat-list-item role=\\\"listitem\\\"  class=\\\"border_bottom\\\"\\r\\n                              [ngClass]=\\\"{'bg_primary': menuSelectedOption == menuptions.RESTRICTED_FOLDER}\\\">\\r\\n                              {{menuptions.RESTRICTED_FOLDER}}</mat-list-item>\\r\\n                    </a>\\r\\n                    <a (click)=\\\"menuSelectedOption=menuptions.RLATIONSHIP_FOLDER\\\" class=\\\"cursor-pointer\\\">\\r\\n                         <mat-list-item role=\\\"listitem\\\"  class=\\\"border_bottom\\\"\\r\\n                              [ngClass]=\\\"{'bg_primary': menuSelectedOption == menuptions.RLATIONSHIP_FOLDER}\\\">\\r\\n                              {{menuptions.RLATIONSHIP_FOLDER}}</mat-list-item>\\r\\n                    </a>\\r\\n                    \\r\\n                    <a (click)=\\\"menuSelectedOption=menuptions.ADD_CLIENT\\\" class=\\\"cursor-pointer\\\">\\r\\n                         <mat-list-item role=\\\"listitem\\\"  class=\\\"border_bottom\\\"\\r\\n                              [ngClass]=\\\"{'bg_primary': menuSelectedOption == menuptions.ADD_CLIENT}\\\">\\r\\n                              {{menuptions.ADD_CLIENT}}</mat-list-item>\\r\\n                    </a>\\r\\n               </mat-list>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col ml-3 card\\\" *ngIf=\\\"menuSelectedOption !=''\\\">\\r\\n               <div *ngIf=\\\"menuSelectedOption == menuptions.PITCH_CREATION\\\">\\r\\n                    <app-pitchcreation></app-pitchcreation>\\r\\n               </div>\\r\\n               <div *ngIf=\\\"menuSelectedOption == menuptions.RLATIONSHIP_FOLDER\\\">\\r\\n                    <app-relationshipcreation></app-relationshipcreation>\\r\\n               </div>\\r\\n               <div  *ngIf=\\\"menuSelectedOption == menuptions.CREDIT_TRANSACTION_FOLDER\\\">\\r\\n                    <app-credittransaction></app-credittransaction>\\r\\n               </div>\\r\\n               <div  *ngIf=\\\"menuSelectedOption == menuptions.ADD_CLIENT\\\">\\r\\n                    <app-addclient></app-addclient>\\r\\n               </div>\\r\\n          </div>\\r\\n\\r\\n     </div>\\r\\n    \\r\\n</div>\"","export default \"<div class=\\\"row mx-0\\\">\\r\\n        <span class=\\\"col-sm-11 font-weight-bold\\\">Team information selection</span>\\r\\n        <mat-icon class=\\\"float-right col-sm-1 text-right cursor-pointer\\\" (click)=\\\"closeDialog()\\\">close</mat-icon>\\r\\n            </div>\\r\\n            <hr/>\\r\\n<div class=\\\"row mx-0 cotainer\\\">\\r\\n    \\r\\n       \\r\\n    <mat-card class=\\\"col-sm-5 mr-2 height_scrol\\\" >\\r\\n            <mat-form-field class=\\\"w-100 \\\">\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" matInput placeholder=\\\"Search\\\">\\r\\n            </mat-form-field>\\r\\n        <mat-list role=\\\"list\\\">\\r\\n            <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let x of source | listfilter:searchText; let i = index\\\">\\r\\n                <mat-radio-button color=\\\"primary\\\"  [value]=\\\"x\\\"\\r\\n                    (change)=\\\"selection = $event.value\\\">\\r\\n                    <small class=\\\"text-wrap\\\">{{x.Name}}</small>\\r\\n                </mat-radio-button>\\r\\n            </mat-list-item>\\r\\n        </mat-list>\\r\\n    </mat-card>\\r\\n    <mat-card class=\\\"h-25\\\" style=\\\"margin-top:10em\\\">\\r\\n        <div class=\\\"mb-3\\\">\\r\\n                <mat-icon class=\\\"cursor-pointer bg_primary brder_radius_5px\\\" (click)=\\\"movelefttoright()\\\">keyboard_arrow_right</mat-icon>\\r\\n            \\r\\n        </div>\\r\\n        <div>\\r\\n                <mat-icon class=\\\"cursor-pointer bg_primary brder_radius_5px\\\" (click)=\\\"moverighttoleft()\\\">keyboard_arrow_left</mat-icon>\\r\\n        </div>\\r\\n    </mat-card>\\r\\n    <mat-card class=\\\"col-sm-5 ml-2 height_scrol\\\">\\r\\n        <mat-list role=\\\"list\\\">\\r\\n            <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let x of destination; let i = index\\\">\\r\\n                <mat-radio-button color=\\\"primary\\\"  [value]=\\\"x\\\"\\r\\n                    (change)=\\\"destinationSelection = $event.value\\\">\\r\\n                    <small class=\\\"text-wrap\\\">{{x.Name}}</small>\\r\\n                </mat-radio-button>\\r\\n            </mat-list-item>\\r\\n        </mat-list>\\r\\n    </mat-card>\\r\\n</div>\\r\\n<hr/>\\r\\n<div>\\r\\n        <button type=\\\"button\\\" class=\\\"float-right bg_primary\\\" (click)=\\\"sendSelectedData()\\\" [disabled]=\\\"destination.length==0\\\"  mat-raised-button>\\r\\nOk                \\r\\n           </button>\\r\\n</div>\\r\\n\"","export default \"<!-- <div class=\\\"container mt-5\\\"> -->\\r\\n        \\r\\n    <!-- <form [frmGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onFormSubmit()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email</label>\\r\\n        <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.email.errors }\\\" placeholder=\\\"Enter email here\\\"/>\\r\\n        <div *ngIf=\\\"submitted && fval.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n        <div *ngIf=\\\"fval.email.errors.required\\\">Email is required</div>\\r\\n        <div *ngIf=\\\"fval.email.errors.email\\\">Enter valid email address</div>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && fval.password.errors }\\\" placeholder=\\\"Enter password here\\\" />\\r\\n        <div *ngIf=\\\"submitted && fval.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n        <div *ngIf=\\\"fval.password.errors.required\\\">Password is required</div>\\r\\n        </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\r\\n        <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n        Login\\r\\n        </button>\\r\\n        <a routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">Register</a>\\r\\n        </div>\\r\\n        </form> -->\\r\\n    <mat-card class=\\\"mat-elevation-z3 px-5\\\">\\r\\n           \\r\\n        <mat-card-title>Login</mat-card-title>\\r\\n        <mat-card-content>\\r\\n            \\r\\n            <form [formGroup]=\\\"loginForm\\\" >\\r\\n                <div *ngIf=\\\"errorMsg\\\" class=\\\"text-center mb-3 mt-1\\\">\\r\\n                    <label class=\\\"text-danger\\\">{{errorMsg}}</label>\\r\\n                </div>\\r\\n              <div>\\r\\n                    <mat-form-field>\\r\\n                        <input type=\\\"text\\\" matInput placeholder=\\\"Username\\\" formControlName=\\\"email\\\" required>\\r\\n                    </mat-form-field>\\r\\n                    <div *ngIf=\\\"submitted && fval.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.email.errors.required\\\">Email is required</div>\\r\\n                        <div *ngIf=\\\"fval.email.errors.email\\\">Enter valid email address</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                    <div>\\r\\n                    <mat-form-field>\\r\\n                        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\r\\n                    </mat-form-field>\\r\\n                    <div *ngIf=\\\"submitted && fval.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"fval.password.errors.required\\\">Password is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                        <div>\\r\\n                                <mat-spinner-button style=\\\"border-radius: 5px\\\" class=\\\"float-right\\\"\\r\\n                                [options]=\\\"spinnerButtonOptions\\\"\\r\\n                                (btnClick)=\\\"onFormSubmit()\\\">\\r\\n                              </mat-spinner-button>\\r\\n                            <!-- <button type=\\\"button\\\" class=\\\"bg_primary float-right\\\" mat-raised-button  (click)=\\\"onFormSubmit()\\\">Login</button> -->\\r\\n\\r\\n                        </div>      \\r\\n            </form>\\r\\n        </mat-card-content>\\r\\n        <!-- <mat-card-footer class=\\\"p-3\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"bg_primary\\\" mat-raised-button  (click)=\\\"onFormSubmit()\\\">Login</button>\\r\\n    \\r\\n        </mat-card-footer> -->\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n<!-- </div> -->\\r\\n\\r\\n\"","export default \"<div id=\\\"main-content\\\" class=\\\"mt-3 mb-5\\\">\\r\\n    <div class=\\\" mt-4 ml-2\\\">\\r\\n                     <div class=\\\"container\\\">\\r\\n                        <form class=\\\"\\\" [formGroup]=\\\"pitchCreationForm\\\" #myForm=\\\"ngForm\\\">\\r\\n                             <div class=\\\"row mx-0\\\">\\r\\n                                <mat-form-field class=\\\"w-100 \\\">\\r\\n                                     <input type=\\\"text\\\" formControlName=\\\"Name\\\" matInput placeholder=\\\"Name\\\" required>\\r\\n                                </mat-form-field>\\r\\n                                <div class=\\\"text-danger\\\" *ngIf=\\\"f.Name.invalid && f.Name.errors.required && isSubmitted\\\">\\r\\n                                    Name Required.\\r\\n                                </div>\\r\\n                                <mat-form-field class=\\\"w-100\\\">\\r\\n                                     <input matInput [matDatepicker]=\\\"picker\\\" [min]='pitchMinDate' formControlName=\\\"PitchDate\\\" placeholder=\\\"Pitch Date\\\" required>\\r\\n                                     <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"> </mat-datepicker-toggle>\\r\\n                                     <mat-datepicker #picker></mat-datepicker>\\r\\n                                </mat-form-field>\\r\\n                                \\r\\n                                <div class=\\\"text-danger\\\" *ngIf=\\\"f.PitchDate.invalid && f.PitchDate.touched && f.PitchDate.errors?.matDatepickerMin\\\">\\r\\n                                        Selected Pitch Date is less than today date.\\r\\n                                    </div>\\r\\n                                <div class=\\\"text-danger\\\" *ngIf=\\\"f.PitchDate.invalid && f.PitchDate.errors.required && (f.PitchDate.touched || isSubmitted)\\\">\\r\\n                                        Pitch date Required.\\r\\n                                    </div> \\r\\n                                <fieldset class=\\\"mt-2 mb-2 w-100 fieldset_style\\\">\\r\\n                                     <legend class=\\\"px-1 ml-2 legend_style\\\" > Pitch Information</legend>\\r\\n                                     <fieldset class=\\\"mt-2 mb-2 mx-2 fieldset_style\\\">\\r\\n                                             <legend class=\\\"px-1 ml-2 legend_style\\\">Relationship Information</legend>\\r\\n                                             <div class=\\\"mx-4\\\">\\r\\n                                                     <mat-form-field class=\\\"w-100\\\">\\r\\n                                                            <mat-label>Industry</mat-label>\\r\\n                                                            <mat-select formControlName=\\\"Industry\\\" [multiple]=\\\"false\\\">\\r\\n                                                                <mat-option>\\r\\n                                                                    <ngx-mat-select-search [placeholderLabel]=\\\"'Search industry'\\\" [formControl]=\\\"industrySearchCtrl\\\" [noEntriesFoundLabel]=\\\"'no matching team found'\\\" ></ngx-mat-select-search>\\r\\n                                                                </mat-option>\\r\\n                                                                <mat-option *ngFor=\\\"let industry of industryJson | listfilter:industrySearchText \\\" [value]=\\\"industry.Value\\\">\\r\\n                                                                        <small>{{industry.Name}}</small>\\r\\n                                                                      </mat-option>\\r\\n                                                            </mat-select>\\r\\n                                                          <!-- <input matInput  placeholder=\\\"Industry\\\" formControlName=\\\"Industry\\\" aria-label=\\\"Industry\\\" [matAutocomplete]=\\\"autoIndustry\\\" required>\\r\\n                                                          <mat-autocomplete #autoIndustry=\\\"matAutocomplete\\\">\\r\\n                                                             <mat-option *ngFor=\\\"let industry of industryJson \\\" [value]=\\\"industry.Value\\\">\\r\\n                                                               <small>{{industry.Name}}</small>\\r\\n                                                             </mat-option>\\r\\n                                                          </mat-autocomplete> -->\\r\\n                                                     </mat-form-field>\\r\\n                                                     <div class=\\\"text-danger\\\" *ngIf=\\\"f.Industry.invalid && f.Industry.errors.required && isSubmitted\\\">\\r\\n                                                            Industry Required.\\r\\n                                                        </div>\\r\\n                                                     <mat-form-field class=\\\"w-100\\\">\\r\\n                                                            <mat-label>Client Name</mat-label>\\r\\n                                                            <mat-select formControlName=\\\"ClientName\\\" [multiple]=\\\"false\\\">\\r\\n                                                                <mat-option>\\r\\n                                                                    <ngx-mat-select-search [placeholderLabel]=\\\"'Search client name'\\\" [formControl]=\\\"clientNameSearchCtrl\\\" [noEntriesFoundLabel]=\\\"'no matching client found'\\\" ></ngx-mat-select-search>\\r\\n                                                                </mat-option>\\r\\n                                                                <mat-option *ngFor=\\\"let client of clientNamesJson | listfilter:clientNameSearchText\\\"[value]=\\\"client.Value\\\">\\r\\n                                                                        <small>{{client.Name}}</small>\\r\\n                                                                     </mat-option>\\r\\n                                                               \\r\\n                                                            </mat-select>\\r\\n                                                         <!-- <input matInput placeholder=\\\"Client Name\\\" formControlName=\\\"ClientName\\\" aria-label=\\\"Client Name\\\" [matAutocomplete]=\\\"autoClient\\\" required>\\r\\n                                                             <mat-autocomplete #autoClient=\\\"matAutocomplete\\\">\\r\\n                                                                 <mat-option *ngFor=\\\"let client of clientNamesJson \\\"[value]=\\\"client.Value\\\">\\r\\n                                                                     <small>{{client.Name}}</small>\\r\\n                                                                  </mat-option>\\r\\n                                                             </mat-autocomplete> -->\\r\\n                                                     </mat-form-field>\\r\\n                                                     <div class=\\\"text-danger\\\" *ngIf=\\\"f.ClientName.invalid && f.ClientName.errors.required && isSubmitted\\\">\\r\\n                                                            Client Name Required.\\r\\n                                                        </div>\\r\\n                                             </div>\\r\\n                                     </fieldset>\\r\\n                                     <fieldset class=\\\"mt-2 mb-2 mx-2 fieldset_style\\\">\\r\\n                                         <legend class=\\\"px-1 ml-2 legend_style\\\">Product Information</legend>\\r\\n                                         <div class=\\\"row mx-1\\\">\\r\\n                                         <mat-icon (click)=\\\"addProductInfoForm()\\\" class=\\\"float-right mx-4 mb-2 bg_primary cursor-pointer\\\" *ngIf=\\\"!productInfoForm.invalid\\\">add</mat-icon>\\r\\n                                         <mat-icon (click)=\\\"removeAllProductInfoForm()\\\" *ngIf=\\\"productInfoForm.length!=1\\\" class=\\\"float-right mx-4 mb-2 bg_primary cursor-pointer\\\">close</mat-icon>\\r\\n                                        </div>\\r\\n                                         <div class=\\\"mx-4  mb-2 fieldset_style\\\" *ngFor=\\\"let productForm of productInfoForm.controls; let i=index\\\">\\r\\n                                             <div [formGroup]=\\\"productForm\\\" class=\\\"row m-0 mt-1\\\">\\r\\n                                             <div class=\\\"col-sm-2 mt-1\\\">\\r\\n                                                 <mat-form-field class=\\\"w-100\\\">\\r\\n                                                        <!-- <mat-label>CPL1</mat-label>\\r\\n                                                        <mat-select formControlName=\\\"CPL1\\\" [multiple]=\\\"false\\\" (selectionChange)='CPL1OnChange($event.value)'>\\r\\n                                                                 <mat-option *ngFor=\\\"let cpl1 of cpl1Json \\\" [value]=\\\"cpl1.Value\\\">\\r\\n                                                                        <small>{{cpl1.Name}}</small>\\r\\n                                                                    </mat-option>\\r\\n                                                        </mat-select> -->\\r\\n                                                     <input matInput formControlName=\\\"CPL1\\\" placeholder=\\\"CPL1\\\" aria-label=\\\"CPL1\\\" (keyup)=\\\"cplKeyPress($event,i,'CPL1')\\\" [matAutocomplete]=\\\"autoCPL1\\\" required>\\r\\n                                                     <mat-autocomplete #autoCPL1=\\\"matAutocomplete\\\" (optionSelected)='CPL1OnChange($event.option.value)'>\\r\\n                                                             <mat-option *ngFor=\\\"let cpl1 of cpl1Json \\\" [value]=\\\"cpl1.Value\\\">\\r\\n                                                                 <small>{{cpl1.Name}}</small>\\r\\n                                                             </mat-option>\\r\\n                                                     </mat-autocomplete>\\r\\n                                                 </mat-form-field>\\r\\n                                                 <div class=\\\"text-danger\\\" *ngIf=\\\"productForm['controls'].CPL1.status!='VALID' && isSubmitted\\\">\\r\\n                                                        CPL1 Required.\\r\\n                                                    </div> \\r\\n                                             </div>\\r\\n                                             <div class=\\\"col-sm-9 mt-1\\\" *ngIf=\\\"productForm['controls'].CPL1.status=='VALID'\\\">\\r\\n                                                 <mat-form-field class=\\\"w-100\\\">\\r\\n                                                        <!-- <mat-label>CPL2</mat-label>\\r\\n                                                        <mat-select formControlName=\\\"CPL2\\\" [multiple]=\\\"false\\\">\\r\\n                                                                <mat-option *ngFor=\\\"let cpl2 of filteredCPL2 \\\"[value]=\\\"cpl2.Value\\\">\\r\\n                                                                        <small>{{cpl2.Name}}</small>\\r\\n                                                                    </mat-option>\\r\\n                                                        </mat-select> -->\\r\\n                                                     <input matInput formControlName=\\\"CPL2\\\"  placeholder=\\\"CPL2\\\" aria-label=\\\"CPL2\\\" (keyup)=\\\"cplKeyPress($event,i,'CPL2')\\\" [matAutocomplete]=\\\"autoCPL2\\\" required>\\r\\n\\r\\n                                                     <mat-autocomplete #autoCPL2=\\\"matAutocomplete\\\">\\r\\n                                                         <mat-option *ngFor=\\\"let cpl2 of filteredCPL2 \\\"[value]=\\\"cpl2.Value\\\">\\r\\n                                                             <small>{{cpl2.Name}}</small>\\r\\n                                                         </mat-option>\\r\\n                                                     </mat-autocomplete>\\r\\n                                                 </mat-form-field>\\r\\n                                                 <div class=\\\"text-danger\\\" *ngIf=\\\"productForm['controls'].CPL2.status!='VALID' && isSubmitted\\\">\\r\\n                                                        CPL2 Required.\\r\\n                                                    </div>\\r\\n                                             </div>\\r\\n                                             <div class=\\\"col-sm-1 mt-3 text-danger cursor-pointer\\\">\\r\\n     <mat-icon (click)=\\\"removeProductInfoForm(i)\\\" *ngIf=\\\"i!=0\\\">close</mat-icon>\\r\\n     \\r\\n                                             </div>\\r\\n                                             </div>\\r\\n                                         </div>\\r\\n                                     </fieldset>\\r\\n                                     <fieldset class=\\\"mt-2 mb-2 mx-2 fieldset_style\\\">\\r\\n                                             <legend class=\\\"px-1 ml-2 legend_style\\\">Team Information</legend>\\r\\n                                             <div class=\\\"mx-4 row\\\">\\r\\n                                                 <div class=\\\"col-sm\\\">\\r\\n                                                        <angular2-multiselect formControlName=\\\"TeamInfo\\\"\\r\\n                                                         [data]=\\\"teamInfoJson\\\" \\r\\n                                                        [settings]=\\\"teamInfoDropdownSettings\\\" \\r\\n                                                        (onSelect)=\\\"onItemSelect($event)\\\" \\r\\n                                                        \\r\\n                                                        (onSelectAll)=\\\"onSelectAll($event)\\\"\\r\\n                                                        >\\r\\n                                                    </angular2-multiselect>\\r\\n    <!-- <ng-multiselect-dropdown formControlName=\\\"TeamInfo\\\"\\r\\n    [placeholder]=\\\"'Select team info'\\\"\\r\\n    [data]=\\\"teamInfoJson\\\"\\r\\n    [settings]=\\\"teamInfoDropdownSettings\\\"\\r\\n    (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n    (onSelectAll)=\\\"onSelectAll($event)\\\"\\r\\n  >\\r\\n  </ng-multiselect-dropdown> -->\\r\\n                                                <!-- <mat-form-field class=\\\"w-100\\\">\\r\\n                                                    \\r\\n                                                    <mat-label>Team Info</mat-label>\\r\\n                                                    <mat-select formControlName=\\\"TeamInfo\\\" [multiple]=\\\"true\\\" #multiSelect>\\r\\n                                                        <mat-option>\\r\\n                                                            <ngx-mat-select-search [placeholderLabel]=\\\"'Find team...'\\\" [noEntriesFoundLabel]=\\\"'no matching team found'\\\"  [formControl]=\\\"teamInfoSearchCtrl\\\"></ngx-mat-select-search>\\r\\n                                                        </mat-option>\\r\\n                                                      <mat-option *ngFor=\\\"let team of filteredTeamInfo._events[0]\\\" [value]=\\\"team\\\">\\r\\n                                                            {{team.Name}}\\r\\n                                                      </mat-option>\\r\\n                                                    </mat-select>\\r\\n                                                </mat-form-field> -->\\r\\n                                                <div class=\\\"text-danger\\\" *ngIf=\\\"f.TeamInfo.invalid  && isSubmitted\\\">\\r\\n                                                        TeamInfo Required.\\r\\n                                                    </div>\\r\\n                                            </div>\\r\\n                                                <div class=\\\"card col-sm-4\\\" style=\\\"max-height: 150px;\\r\\n                                                overflow: auto;\\\" *ngIf=\\\"f.TeamInfo.valid\\\">\\r\\n                                                <label class=\\\"font-weight-bold\\\">Selected Team Info</label>\\r\\n                                                <label class=\\\"w-100 pl-3\\\" *ngFor=\\\"let team of f.TeamInfo?.value; let i=index;\\\">\\r\\n                                                        <span>{{i+1}}. {{team.Name}}</span>\\r\\n                                                </label>\\r\\n                                                    </div>\\r\\n                                              \\r\\n                                             </div>\\r\\n                                             <div class=\\\"mx-4 row mt-4\\\">\\r\\n                                                             <div class=\\\"col-sm\\\">\\r\\n                                                                  <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                       <textarea style=\\\"height:100px\\\" readonly formControlName=\\\"AdditionalTeamInfo\\\" matInput placeholder=\\\"Additional Pitch Team\\\"></textarea>\\r\\n                                                                  </mat-form-field>\\r\\n                                                             </div>\\r\\n                                                             <div class=\\\"card mb-3\\\">\\r\\n                                                                             <div>\\r\\n                                                                                <mat-icon (click)=\\\"openDialog()\\\" class=\\\"font-weight-bold cursor-pointer\\\" style=\\\"color: forestgreen;\\\">more_vert</mat-icon>\\r\\n                                                                             </div>\\r\\n                                                                             <div>\\r\\n                                                                               <mat-icon (click)='clearAdditionalTeamInfo()' class=\\\"font-weight-bold cursor-pointer\\\" style=\\\"color: forestgreen;\\\">close</mat-icon>\\r\\n                                                                             </div>\\r\\n                                                                        </div>\\r\\n                                                          </div>\\r\\n                                                          <div class=\\\"mx-5 row mt-4 mb-4\\\">\\r\\n                                                              <label>Corp Finn Involved : </label>\\r\\n                                                                <mat-radio-group class=\\\"ml-5\\\" aria-label=\\\"Corp Finn Involved\\\" formControlName=\\\"CorpFinnInvolved\\\">\\r\\n                                                                        <mat-radio-button color=\\\"primary\\\" class=\\\"mr-4\\\" value=true>Yes</mat-radio-button>\\r\\n                                                                        <mat-radio-button color=\\\"primary\\\" value=false>No</mat-radio-button>\\r\\n                                                                      </mat-radio-group>\\r\\n                                                          </div>\\r\\n                                     </fieldset>\\r\\n                                </fieldset>\\r\\n                             </div>\\r\\n                             <div class=\\\"mr-2 mb-5\\\">\\r\\n                                 <mat-spinner-button style=\\\"border-radius: 5px\\\" class=\\\"text-left float-right\\\" [options]=\\\"pitchSpinnerButtonOptions\\\" (btnClick)=\\\"createResource(myForm)\\\"></mat-spinner-button>\\r\\n                             </div>\\r\\n                        </form>\\r\\n                     </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"mt-4 mx-4\\\">\\r\\n    <form class=\\\"\\\" [formGroup]=\\\"relationshipForm\\\" #myForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"bg-light card p-2 font-weight-bold\\\">\\r\\n            Relationship Details\\r\\n        </div>\\r\\n        <div class=\\\" mx-4 mt-2\\\">\\r\\n            <mat-form-field class=\\\"w-100 \\\">\\r\\n                <input type=\\\"text\\\" formControlName=\\\"ClientName\\\" matInput placeholder=\\\"Client Name\\\" required>\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"text-danger\\\"\\r\\n                *ngIf=\\\"f.ClientName.invalid && f.ClientName.errors.required && isSubmitted\\\">\\r\\n                Client Name Required.\\r\\n            </div>\\r\\n            <!-- <mat-form-field class=\\\"w-100\\\">\\r\\n                <mat-label>Select Coverage Team</mat-label>\\r\\n                <mat-select formControlName=\\\"CoverageTeam\\\" [multiple]=\\\"false\\\" required>\\r\\n                    <mat-option>\\r\\n                        <ngx-mat-select-search [placeholderLabel]=\\\"'Search coverage team'\\\"\\r\\n                            [formControl]=\\\"coverageteamSearchCtrl\\\" [noEntriesFoundLabel]=\\\"'no matching team found'\\\">\\r\\n                        </ngx-mat-select-search>\\r\\n                    </mat-option>\\r\\n                    <mat-option *ngFor=\\\"let item of coverageTeamInfoJSON | listfilter:coverageTeamSearchText \\\"\\r\\n                        [value]=\\\"item.Value\\\">\\r\\n                        {{item.Name}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"f.CoverageTeam.invalid && f.CoverageTeam.errors.required && isSubmitted\\\">\\r\\n                Coverage team Required.\\r\\n            </div>\\r\\n   \\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n                <mat-label>Select Relationship Type</mat-label>\\r\\n                <mat-select formControlName=\\\"RelationshipType\\\" [multiple]=\\\"false\\\" required>\\r\\n                    <mat-option value=\\\"Prospect\\\">\\r\\n                        Prospect\\r\\n                    </mat-option>\\r\\n                    <mat-option value=\\\"Inactive\\\">\\r\\n                        Inactive\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"text-danger\\\"\\r\\n                *ngIf=\\\"f.RelationshipType.invalid && f.RelationshipType.errors.required && isSubmitted\\\">\\r\\n                Relationship type Required.\\r\\n            </div> -->\\r\\n        </div>\\r\\n        <div class=\\\"bg-light card p-2 font-weight-bold\\\">\\r\\n            Industry Details\\r\\n        </div>\\r\\n        <div class=\\\" mx-4 mt-2\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n                <mat-label>Select Industry</mat-label>\\r\\n                <mat-select formControlName=\\\"Industry\\\" [multiple]=\\\"false\\\" required>\\r\\n                    <mat-option>\\r\\n                        <ngx-mat-select-search [placeholderLabel]=\\\"'Search cgb vertical'\\\"\\r\\n                            [formControl]=\\\"idustrySearchCtrl\\\" [noEntriesFoundLabel]=\\\"'no matching Industry'\\\">\\r\\n                        </ngx-mat-select-search>\\r\\n                    </mat-option>\\r\\n                    <mat-option *ngFor=\\\"let item of idustryJSON | listfilter:idustrySearchText \\\"\\r\\n                        [value]=\\\"item.Value\\\">\\r\\n                        {{item.Name}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n\\r\\n            </mat-form-field>\\r\\n            <mat-error  *ngIf=\\\"f.Industry.invalid && f.Industry.errors.required && isSubmitted\\\">\\r\\n                Industry Required.\\r\\n            </mat-error>\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n                <mat-label>Select Sub-Industry</mat-label>\\r\\n                <mat-select formControlName=\\\"SubIndustry\\\" [multiple]=\\\"false\\\" required>\\r\\n                    <mat-option>\\r\\n                        <ngx-mat-select-search [placeholderLabel]=\\\"'Search Sub Industry'\\\"\\r\\n                            [formControl]=\\\"subIndustrySearchCtrl\\\" [noEntriesFoundLabel]=\\\"'no matching Sub Industry'\\\">\\r\\n                        </ngx-mat-select-search>\\r\\n                    </mat-option>\\r\\n                    <mat-option *ngFor=\\\"let item of subIndustryInfoJSON | listfilter:subIndustrySearchText \\\"\\r\\n                        [value]=\\\"item.Value\\\">\\r\\n                        {{item.Name}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n\\r\\n            </mat-form-field>\\r\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"f.SubIndustry.invalid && f.SubIndustry.errors.required && isSubmitted\\\">\\r\\n                Sub-Industry Required.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"mt-2 mx-0\\\" *ngIf=\\\"!isFromOther\\\">\\r\\n                <mat-spinner-button style=\\\"border-radius: 5px\\\" class=\\\"mb-4 text-left float-right\\\" [options]=\\\"relationSpinnerButtonOptions\\\" (btnClick)=\\\"createRelationship(myForm)\\\"></mat-spinner-button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HomeComponent} from './components/home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',component:LoginComponent\r\n  },\r\n  {\r\n    path:'login',component:LoginComponent\r\n  },\r\n  {\r\n    path:'home',component:HomeComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".dataedcded{\\r\\n    border: 0px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRhZWRjZGVke1xyXG4gICAgYm9yZGVyOiAwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'AIBUI';\r\n  public userDetails:any;\r\n constructor(private router:Router){\r\n\r\n }\r\n  ngOnInit() {\r\n    this.userDetails=JSON.parse(localStorage.getItem('loginUserDetails'));\r\n  }\r\n  logout(){\r\n    this.userDetails=null;\r\n    localStorage.clear();\r\nthis.router.navigateByUrl('/login');\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { NgModule ,CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule }    from '@angular/common/http';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { TeaminformatonComponent } from './components/home/teaminformaton/teaminformaton.component';\r\nimport { PitchcreationComponent } from './components/pitchcreation/pitchcreation.component';\r\nimport { ListfilterPipe } from './pipes/listfilter.pipe';\r\nimport { RelationshipcreationComponent } from './components/relationshipcreation/relationshipcreation.component';\r\nimport { CredittransactionComponent } from './components/credittransaction/credittransaction.component';\r\nimport { AddclientComponent } from './components/addclient/addclient.component';\r\nimport { ViewclientComponent } from './components/addclient/viewclient/viewclient.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    TeaminformatonComponent,\r\n    PitchcreationComponent,\r\n    ListfilterPipe,\r\n    RelationshipcreationComponent,\r\n    CredittransactionComponent,\r\n    AddclientComponent,\r\n    ViewclientComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    MaterialModule,\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    AngularMultiSelectModule\r\n  ],\r\n  entryComponents:[TeaminformatonComponent,ViewclientComponent],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export enum Roles {\r\n    ADMIN=\"Admin\",\r\n    BANKER=\"Banker\"\r\n\r\n}\r\n","export default \"a{\\r\\n    color: #007bff !important;\\r\\n    text-decoration: underline !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZGRjbGllbnQvYWRkY2xpZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIscUNBQXFDO0FBQ3pDIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hZGRjbGllbnQvYWRkY2xpZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhe1xyXG4gICAgY29sb3I6ICMwMDdiZmYgIWltcG9ydGFudDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatProgressButtonOptions } from 'mat-progress-buttons';\r\nimport { AddclientService } from '../../services/addclient.service';\r\nimport { FormControl, Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ViewclientComponent } from './viewclient/viewclient.component';\r\n\r\n@Component({\r\n  selector: 'app-addclient',\r\n  templateUrl: './addclient.component.html',\r\n  styleUrls: ['./addclient.component.css']\r\n})\r\nexport class AddclientComponent implements OnInit {\r\n  SalesforceClients:any= [\r\n    {\r\n      \"wcisId\": \"\",\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Energy\",\r\n      \"state\":\"MN\"\r\n    },\r\n    {\r\n      \"wcisId\": 233775419,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Energy\",\r\n      \"state\":\"MN\"\r\n    },\r\n    {\r\n      \"wcisId\": 2337754191,\r\n      \"clientName\": \"Accent Inc.\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Customer & Retail\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MN\"\r\n    },\r\n    {\r\n      \"wcisId\": 2337754192,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MN\"\r\n    },\r\n    {\r\n      \"wcisId\": 233775419,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MN\"\r\n    },\r\n    {\r\n      \"wcisId\": 233775419,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MN\"\r\n    },\r\n    {\r\n      \"wcisId\": 233775419,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MN\"\r\n    },\r\n    {\r\n      \"wcisId\": 233775419,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MN\"\r\n    },\r\n    {\r\n      \"wcisId\": 233775419,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MD\"\r\n    },\r\n    {\r\n      \"wcisId\": 233775419,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MD\"\r\n    },\r\n    {\r\n      \"wcisId\": 233775419,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MD\"\r\n    },\r\n    {\r\n      \"wcisId\": 233775419,\r\n      \"clientName\": \"ohello Golf Club Inc\",\r\n      \"Sponsor\": \"\",\r\n      \"tickerSymbol\": \"\",\r\n      \"taxId\": \"\",\r\n      \"industry\": \"Energy & Power\",\r\n      \"city\": \"OTHELLO\",\r\n      \"subIndustry\":\"Consumer Products\",\r\n      \"state\":\"MD\"\r\n    }\r\n  ];\r\n  // searchText:any;\r\n  display:any=\"none\";\r\n  isValidFormSubmitted=true;\r\n  searchResult: MatTableDataSource<any>; \r\n  // searchResult:any=[];\r\n  searchForm: FormGroup;\r\n  resultsLength:any=0;\r\n  isDataFound:any=true;\r\n  displayedColumns = ['action', 'clientName','industry','city','state','taxId', 'wcisId'];\r\n  clientSpinnerButtonOptions: MatProgressButtonOptions = {\r\n    active: false,\r\n    text: 'Search Salesforce Clients',\r\n    spinnerSize: 18,\r\n    raised: true,\r\n    stroked: false,\r\n    buttonColor: 'primary',\r\n    spinnerColor: 'accent',\r\n    fullWidth: false,\r\n    disabled: false,\r\n    mode: 'indeterminate',\r\n  }\r\n\r\n  \r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort,{static: true}) sort: MatSort;\r\n  \r\n  constructor(private formBuilder: FormBuilder,private salesforceClientService:AddclientService,public dialog: MatDialog) { \r\n    this.searchForm=this.formBuilder.group({\r\n      searchText: new FormControl('', [Validators.minLength(2), Validators.required]),\r\n    });\r\n  }\r\n\r\n  // ngAfterViewInit() {\r\n  //   debugger\r\n  //   this.searchResult.paginator = this.paginator;\r\n  //   // this.searchResult.sort = this.sort;\r\n  // }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get getSearchText() {\r\n    return this.searchForm.get('searchText');\r\n} \r\n  removeSearchText(){\r\n    this.getSearchText.setValue('');\r\n  }\r\n  \r\n  \r\n  searchClientDetails(){\r\n    if (this.searchForm.invalid) {\r\n      this.isValidFormSubmitted = false;\r\n      this.searchForm.markAllAsTouched();\r\n     \r\n      return;\r\n    }\r\n    this.isValidFormSubmitted=true;\r\n    this.clientSpinnerButtonOptions.active=true;\r\n    // this will be comment after dynamic start\r\n    this.resultsLength=this.SalesforceClients.length;\r\n        this.searchResult= new MatTableDataSource(this.SalesforceClients);\r\n        this.searchResult.paginator = this.paginator;\r\n        this.searchResult.sort=this.sort;\r\n        this.display='';\r\n        this.clientSpinnerButtonOptions.active=false;\r\n\r\n    // this will be comment after dynamic end\r\n\r\n    // this.salesforceClientService.searchSalesforceClients(this.getSearchText.value).subscribe(result => {\r\n    //   this.clientSpinnerButtonOptions.active=false;\r\n    //   if(result.length > 0){\r\n    //     this.display='';\r\n    //     this.resultsLength=result.length;\r\n    //     this.searchResult= new MatTableDataSource(result);\r\n    //     this.searchResult.paginator = this.paginator;\r\n    //     this.searchResult.sort=this.sort;\r\n    //   }\r\n    //   else{\r\n    //     this.isDataFound=false;\r\n    //     this.display='none';\r\n    //   }\r\n     \r\n    // });\r\n  }\r\n\r\n  viewClienDetails(data) {\r\n    const dialogRef = this.dialog.open(ViewclientComponent, {\r\n      width: '80%',\r\n      data:data\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n    });\r\n\r\n  }\r\n\r\n}\r\n","export default \".test{\\r\\n\\tcolor:green;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZGRjbGllbnQvdmlld2NsaWVudC92aWV3Y2xpZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxXQUFXO0FBQ1oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FkZGNsaWVudC92aWV3Y2xpZW50L3ZpZXdjbGllbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXN0e1xyXG5cdGNvbG9yOmdyZWVuO1xyXG59Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-viewclient',\r\n  templateUrl: './viewclient.component.html',\r\n  styleUrls: ['./viewclient.component.css']\r\n})\r\nexport class ViewclientComponent implements OnInit {\r\nmaster:any;\r\n  sampleData=[\r\n    {\r\n      Name:\"Folder 1\",\r\n      ModifiedDate:\"Todays date\",\r\n      ModifiedBy:\"Banker\",\r\n      IsFolder:true\r\n    },\r\n    {\r\n      Name:\"Document 1\",\r\n      ModifiedDate:\"Todays date\",\r\n      ModifiedBy:\"Banker\",\r\n      IsFolder:false\r\n    },\r\n    {\r\n      Name:\"Folder 2\",\r\n      ModifiedDate:\"Todays date\",\r\n      ModifiedBy:\"Banker\",\r\n      IsFolder:true\r\n    },\r\n    {\r\n      Name:\"Folder 3\",\r\n      ModifiedDate:\"Todays date\",\r\n      ModifiedBy:\"Banker\",\r\n      IsFolder:true\r\n    },\r\n    {\r\n      Name:\"Document 2\",\r\n      ModifiedDate:\"Todays date\",\r\n      ModifiedBy:\"Banker\",\r\n      IsFolder:false\r\n    },\r\n  ]\r\n  constructor(public dialogRef: MatDialogRef<ViewclientComponent>,@Inject(MAT_DIALOG_DATA) public source: any) { }\r\n\r\n  ngOnInit() {\r\n    this.master=this.source\r\n  }\r\n  closeDialog(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","export default \".fieldset_style{\\r\\n    border: solid;\\r\\n    border-width: thin;\\r\\n    border-color: #efe6e6;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n.legend_style{\\r\\n    width: auto;\\r\\n    color: #7e7f80;\\r\\n    font-size: 14px;\\r\\n}\\r\\n/* ::ng-deep .clear-all c-icon{\\r\\n    display: none !important;;\\r\\n}\\r\\n::ng-deep .dropdown-list ul li {\\r\\n    padding: 5px !important;\\r\\n} */\\r\\n/* ::ng-deep.pure-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\r\\n    background: maroon !important;\\r\\n}\\r\\n::ng-deep.selected-list .c-list .c-token {\\r\\n    background: maroon;\\r\\n}\\r\\n::ng-deep.pure-checkbox input[type=\\\"checkbox\\\"] + label:before {\\r\\n    color: maroon !important;\\r\\n    border: 1px solid maroon !important;\\r\\n} */\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jcmVkaXR0cmFuc2FjdGlvbi9jcmVkaXR0cmFuc2FjdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsY0FBYztJQUNkLGVBQWU7QUFDbkI7QUFDQTs7Ozs7R0FLRztBQUNIOzs7Ozs7Ozs7R0FTRyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlZGl0dHJhbnNhY3Rpb24vY3JlZGl0dHJhbnNhY3Rpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWVsZHNldF9zdHlsZXtcclxuICAgIGJvcmRlcjogc29saWQ7XHJcbiAgICBib3JkZXItd2lkdGg6IHRoaW47XHJcbiAgICBib3JkZXItY29sb3I6ICNlZmU2ZTY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuLmxlZ2VuZF9zdHlsZXtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgY29sb3I6ICM3ZTdmODA7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuLyogOjpuZy1kZWVwIC5jbGVhci1hbGwgYy1pY29ue1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OztcclxufVxyXG46Om5nLWRlZXAgLmRyb3Bkb3duLWxpc3QgdWwgbGkge1xyXG4gICAgcGFkZGluZzogNXB4ICFpbXBvcnRhbnQ7XHJcbn0gKi9cclxuLyogOjpuZy1kZWVwLnB1cmUtY2hlY2tib3ggaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZDogbWFyb29uICFpbXBvcnRhbnQ7XHJcbn1cclxuOjpuZy1kZWVwLnNlbGVjdGVkLWxpc3QgLmMtbGlzdCAuYy10b2tlbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiBtYXJvb247XHJcbn1cclxuOjpuZy1kZWVwLnB1cmUtY2hlY2tib3ggaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdICsgbGFiZWw6YmVmb3JlIHtcclxuICAgIGNvbG9yOiBtYXJvb24gIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIG1hcm9vbiAhaW1wb3J0YW50O1xyXG59ICovIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray, NgForm } from '@angular/forms';\r\nimport { MatProgressButtonOptions } from 'mat-progress-buttons';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { MatRadioChange, MatDialog } from '@angular/material';\r\nimport { CredittransactionService } from 'src/app/services/credittransaction.service';\r\nimport { TeaminformatonComponent } from '../home/teaminformaton/teaminformaton.component';\r\n\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-credittransaction',\r\n  templateUrl: './credittransaction.component.html',\r\n  styleUrls: ['./credittransaction.component.css']\r\n})\r\nexport class CredittransactionComponent implements OnInit {\r\n  isSubmitted: boolean = false;\r\n  creditTransactionForm: FormGroup;\r\n  minDate: Date = new Date();\r\n  public industrySearchCtrl: FormControl = new FormControl();\r\n  industrySearchText: any = '';\r\n  public clientNameSearchCtrl: FormControl = new FormControl();\r\n  clientNameSearchText: any = '';\r\n  public reportTypeSearchCtrl: FormControl = new FormControl();\r\n  reportTypeSearchText: any = '';\r\n\r\n\r\n  teamInfoDropdownSettings = {\r\n    text: \"Select Team Info\",\r\n    selectAllText: 'Select All',\r\n    unSelectAllText: 'UnSelect All',\r\n    enableCheckAll: false,\r\n    labelKey: 'Name',\r\n    primaryKey: 'Value',\r\n    enableSearchFilter: true,\r\n    classes: \"myclass custom-class\"\r\n  };\r\n  pitchSpinnerButtonOptions: MatProgressButtonOptions = {\r\n    active: false,\r\n    text: 'Submit',\r\n    spinnerSize: 18,\r\n    raised: true,\r\n    stroked: false,\r\n    buttonColor: 'primary',\r\n    spinnerColor: 'accent',\r\n    fullWidth: false,\r\n    disabled: false,\r\n    mode: 'indeterminate',\r\n    // buttonIcon: {\r\n    //   fontIcon: 'add'\r\n    // }\r\n  }\r\n  protected _onDestroy = new Subject<void>();\r\n\r\n  teamInfoJson: any = [];\r\n  filteredCPL2: any = [];\r\n  cpl2Json: any = [];\r\n  cpl1Json: any = [];\r\n  reportTypesJson: any = [];\r\n  clientNamesJson: any = [];\r\n  industryJson: any = [];\r\n  selectedCRTeamInfo:any=''\r\n  constructor(private snackBarService:SnackbarService, public dialog: MatDialog,private formBuilder: FormBuilder, private creditTransactionservice: CredittransactionService) {\r\n    this.creditTransactionservice.getIndustryDetails().subscribe(result => {\r\n      this.industryJson = result;\r\n    });\r\n    this.creditTransactionservice.getClientName().subscribe(result => {\r\n      this.clientNamesJson = result;\r\n    });\r\n    this.creditTransactionservice.getReportTypes().subscribe(result => {\r\n      this.reportTypesJson = result;\r\n    });\r\n    this.creditTransactionservice.getCreditCPL1().subscribe(result => {\r\n      this.cpl1Json = result;\r\n    });\r\n    this.creditTransactionservice.getCreditCPL2().subscribe(result => {\r\n      this.cpl2Json = result;\r\n    });\r\n    this.creditTransactionservice.getCreditTransactionTeams().subscribe(result => {\r\n      this.teamInfoJson = result;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.initform();\r\n    this.industrySearchCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n      this.industrySearchText = this.industrySearchCtrl.value;\r\n    });\r\n    this.clientNameSearchCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n      this.clientNameSearchText = this.clientNameSearchCtrl.value;\r\n    });\r\n    this.reportTypeSearchCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n      this.reportTypeSearchText = this.reportTypeSearchCtrl.value;\r\n    });\r\n  }\r\n\r\n  initform() {\r\n    this.creditTransactionForm = this.formBuilder.group({\r\n      CreditActionName: new FormControl('', Validators.required),\r\n      CreditActionDate: new FormControl('', Validators.required),\r\n      Industry: new FormControl('', Validators.required),\r\n      ClientName: new FormControl('', Validators.required),\r\n      ReportType: new FormControl('', Validators.required),\r\n      ProductInfo: new FormArray([]),\r\n      TeamInfo: new FormControl('', Validators.required),\r\n      AdditionalTeamInfo: new FormControl(''),\r\n      IsLegalExeDocs: new FormControl(''),\r\n      FolderName: new FormControl('', Validators.required)\r\n\r\n    });\r\n    this.creditTransactionForm.controls['FolderName'].disable();\r\n    this.addProductInfoForm();\r\n  }\r\n  get f() {\r\n    return this.creditTransactionForm.controls;\r\n  }\r\n  get productInfoForm() {\r\n    return this.f.ProductInfo as FormArray;\r\n  }\r\n\r\n  addProductInfoForm() {\r\n    if (!this.f.ProductInfo.invalid) {\r\n      this.productInfoForm.push(this.formBuilder.group({\r\n        CPL1: ['', Validators.required],\r\n        CPL2: ['', Validators.required]\r\n      }));\r\n    }\r\n  }\r\n  cplKeyPress(event, index, name) {\r\n    if (name == 'CPL1')\r\n      this.productInfoForm.controls[index]['value'].CPL1 = '';\r\n    else\r\n      this.productInfoForm.controls[index]['value'].CPL2 = '';\r\n\r\n    this.productInfoForm.controls[index]['controls'][name].status = 'INVALID';\r\n    this.productInfoForm.controls[index]['controls'][name].value = '';\r\n    event.target.value = '';\r\n    event.preventDefault();\r\n  }\r\n  removeProductInfoForm(index) {\r\n    this.productInfoForm.removeAt(index);\r\n  }\r\n  removeAllProductInfoForm() {\r\n    for (var i = this.productInfoForm.length - 1; i >= 0; i--) {\r\n      this.productInfoForm.removeAt(i);\r\n    }\r\n    this.addProductInfoForm();\r\n\r\n  }\r\n  CPL1OnChange(val) {\r\n    debugger\r\n    this.filteredCPL2 = this.cpl2Json.filter(x => x.Base == val);\r\n  }\r\n  radioChange($event: MatRadioChange) {\r\n    debugger\r\n    console.log($event.source.name, $event.value);\r\n\r\n    if ($event.value === \"true\") {\r\n      this.creditTransactionForm.controls['FolderName'].enable();\r\n    }\r\n    else {\r\n      this.creditTransactionForm.controls['FolderName'].setValue('');\r\n      this.creditTransactionForm.controls['FolderName'].disable();\r\n    }\r\n  }\r\n  createCreditTransaction(form) {\r\n\r\n    if (this.creditTransactionForm.invalid) {\r\n      this.isSubmitted = true;\r\n      this.creditTransactionForm.markAllAsTouched();\r\n      // (<any>Object).values(this.f).forEach(control => {\r\n      //   debugger\r\n      //   control.markAsTouched();\r\n      // });\r\n      // this.checkProductFormValidations();\r\n      return;\r\n    }\r\n    \r\n    this.creditTransactionservice.createCreditTransaction(this.creditTransactionForm.value).subscribe(result => {\r\n      // alert(JSON.stringify(this.creditTransactionForm.value));\r\n      this.snackBarService.message=\"Credit transaction successfully created.\"\r\n\r\n      this.snackBarService.showSnackbar();\r\n      this.pitchSpinnerButtonOptions.active = false;\r\n    this.isSubmitted = false;\r\n    form.resetForm();\r\n    this.initform();\r\n    });\r\n   \r\n    \r\n  }\r\n  clearAdditionalTeamInfo()\r\n  {\r\n    this.f.AdditionalTeamInfo.setValue('');\r\n  }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(TeaminformatonComponent, {\r\n      width: '60%',\r\n      data:this.teamInfoJson\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      // this.selectedTeamInfo = result;\r\n      \r\n      if(result != null && result.length > 0){\r\n        this.selectedCRTeamInfo='';\r\n      result.forEach(element => {\r\n        // this.selectedTeamInfo+=element.Name + ', ';\r\n         this.selectedCRTeamInfo +=element.Name+ '\\n' + '\\n';\r\n      });\r\n      this.f[\"AdditionalTeamInfo\"].setValue(this.selectedCRTeamInfo);\r\n    }\r\n     \r\n    });\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n    /* :host \\r\\n        ::ng-deep .mat-tab-group {\\r\\n            flex-direction: row;\\r\\n        }\\r\\n        ::ng-deep .mat-tab-header {\\r\\n          border-bottom: none;\\r\\n        }\\r\\n        ::ng-deep .mat-tab-header-pagination {\\r\\n            display: none !important;\\r\\n        }\\r\\n        ::ng-deep .mat-tab-labels {\\r\\n            flex-direction: column;\\r\\n        }\\r\\n        ::ng-deep .mat-ink-bar {\\r\\n            height: 100%;\\r\\n            left: 98% !important;\\r\\n        }\\r\\n        ::ng-deep .mat-tab-body-wrapper {\\r\\n            flex: 1 1 auto;\\r\\n        }\\r\\n        ::ng-deep .mat-tab-list{\\r\\n            border-right: maroon 2px solid !important;\\r\\n        }\\r\\n        ::ng-deep .mat-tab-label{\\r\\n            background-color: white !important;\\r\\n            font-weight: bold !important;\\r\\n        }\\r\\n        ::ng-deep .mat-tab-label-active{\\r\\n            \\r\\n            opacity: unset !important;\\r\\n            background-color: maroon !important;\\r\\n            color: gold !important;\\r\\n        }\\r\\n\\r\\n        .mat-list-item:hover {\\r\\n            background-color: #dfdfdf;\\r\\n        }\\r\\n         */\\r\\n        .menu_style{\\r\\n            min-height: 30em;\\r\\n            max-height: 50em !important;\\r\\n            overflow: auto;\\r\\n        }\\r\\n        \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQ0k7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7VUFxQ007UUFDRjtZQUNJLGdCQUFnQjtZQUNoQiwyQkFBMkI7WUFDM0IsY0FBYztRQUNsQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuICAgIC8qIDpob3N0IFxyXG4gICAgICAgIDo6bmctZGVlcCAubWF0LXRhYi1ncm91cCB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIDo6bmctZGVlcCAubWF0LXRhYi1oZWFkZXIge1xyXG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgOjpuZy1kZWVwIC5tYXQtdGFiLWhlYWRlci1wYWdpbmF0aW9uIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICA6Om5nLWRlZXAgLm1hdC10YWItbGFiZWxzIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9XHJcbiAgICAgICAgOjpuZy1kZWVwIC5tYXQtaW5rLWJhciB7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgbGVmdDogOTglICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIDo6bmctZGVlcCAubWF0LXRhYi1ib2R5LXdyYXBwZXIge1xyXG4gICAgICAgICAgICBmbGV4OiAxIDEgYXV0bztcclxuICAgICAgICB9XHJcbiAgICAgICAgOjpuZy1kZWVwIC5tYXQtdGFiLWxpc3R7XHJcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogbWFyb29uIDJweCBzb2xpZCAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICA6Om5nLWRlZXAgLm1hdC10YWItbGFiZWx7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIDo6bmctZGVlcCAubWF0LXRhYi1sYWJlbC1hY3RpdmV7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBvcGFjaXR5OiB1bnNldCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXJvb24gIWltcG9ydGFudDtcclxuICAgICAgICAgICAgY29sb3I6IGdvbGQgIWltcG9ydGFudDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5tYXQtbGlzdC1pdGVtOmhvdmVyIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2RmZGZkZjtcclxuICAgICAgICB9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgLm1lbnVfc3R5bGV7XHJcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDMwZW07XHJcbiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDUwZW0gIWltcG9ydGFudDtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICAgICJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { MatProgressButtonOptions } from 'mat-progress-buttons';\r\nimport {AppComponent} from '../../app.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {Roles} from '../../common/roles.enum';\r\nimport {SnackbarService} from '../../services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  isShowContent: boolean = false;\r\n  userRoles:any;\r\n  menuptions = MenuOptions;\r\n  menuSelectedOption:any='';\r\n  constructor(public app:AppComponent, private formBuilder:FormBuilder, private snackBarService:SnackbarService, private router :Router) {\r\n    this.userRoles=Roles;\r\n  }\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n    this.app.userDetails=JSON.parse(localStorage.getItem('loginUserDetails'));\r\n    if(this.app.userDetails){\r\n\r\n    }\r\n    else{\r\nthis.router.navigateByUrl(\"/login\")\r\n    }\r\n  }\r\n\r\n \r\n\r\n  \r\n\r\n\r\n \r\n\r\n\r\n}\r\n\r\nexport enum MenuOptions {\r\n  PITCH_CREATION = \"Pitch Creation\",\r\n  STANDARD_FOLDER = \"Standard Folder\",\r\n  CREDIT_TRANSACTION_FOLDER = \"Credit Trasaction Folder\",\r\n  RESTRICTED_FOLDER=\"Restricted Folder\",\r\n  RLATIONSHIP_FOLDER=\"Relationship Creation Folder\",\r\n  ADD_CLIENT=\"Add Client\"\r\n}","export default \".height_scrol{\\r\\n    min-height: 15em;\\r\\n    max-height: 25em;\\r\\n    overflow: auto;\\r\\n}\\r\\n.brder_radius_5px{\\r\\n    border-radius: 5px;\\r\\n}\\r\\n.mat-list-item{\\r\\nheight: 35px !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL3RlYW1pbmZvcm1hdG9uL3RlYW1pbmZvcm1hdG9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ob21lL3RlYW1pbmZvcm1hdG9uL3RlYW1pbmZvcm1hdG9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVpZ2h0X3Njcm9se1xyXG4gICAgbWluLWhlaWdodDogMTVlbTtcclxuICAgIG1heC1oZWlnaHQ6IDI1ZW07XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxufVxyXG4uYnJkZXJfcmFkaXVzXzVweHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG4ubWF0LWxpc3QtaXRlbXtcclxuaGVpZ2h0OiAzNXB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-teaminformaton',\r\n  templateUrl: './teaminformaton.component.html',\r\n  styleUrls: ['./teaminformaton.component.css']\r\n})\r\nexport class TeaminformatonComponent implements OnInit {\r\n\r\n   defaultSelected = 0\r\n   selection: any=[];\r\n  destinationSelection:any=[];\r\n   destination:any=[];\r\n   filteredSource:any=[];\r\n   searchText:any='';\r\n  // source:any[] = [\r\n  //   {\r\n  //     Name: 'James, Smith',\r\n  //     Value: 'James, Smith'\r\n  //   },\r\n  //   {\r\n  //     Name: 'Maria, Rodriguez',\r\n  //     Value: 'Maria, Rodriguez'\r\n  //   },\r\n  //   {\r\n  //     Name: 'James, Johnson',\r\n  //     Value: 'James, Johnson'\r\n  //   },\r\n  //   {\r\n  //     Name: 'Robert, Smith',\r\n  //     Value: 'Robert, Smith'\r\n  //   },\r\n  //   {\r\n  //     Name: 'Maria, Martinez',\r\n  //     Value: 'Maria, Martinez'\r\n  //   },\r\n  //   {\r\n  //     Name: 'IndusDavid, Smithtrial',\r\n  //     Value: 'David, Smith'\r\n  //   },\r\n  //   {\r\n  //     Name: 'Juan, Carlos',\r\n  //     Value: 'Juan, Carlos'\r\n  //   },\r\n  //   {\r\n  //     Name: 'Mike, Jones',\r\n  //     Value: 'Mike, Jones'\r\n  //   }\r\n\r\n  // ]\r\n  constructor(public dialogRef: MatDialogRef<TeaminformatonComponent>,@Inject(MAT_DIALOG_DATA) public source: any){\r\n\r\n  }\r\n  ngOnInit(){\r\n//     debugger\r\n//     this.source.forEach(x=>{\r\n//       this.filteredSource.push(x);\r\n//     })\r\n// this.filteredSource=Object.assign({}, this.source);\r\n  }\r\n// searchChange(){\r\n//   if(this.searchText !='')\r\n// this.filteredSource=this.source.filter(obj=> obj.Name.indexOf(this.searchText.toLowerCase()));\r\n// else\r\n// this.filteredSource=Object.assign({}, this.source);\r\n// }\r\n  sourceChange(event){\r\n  this.selection=event.value;\r\n  }\r\n  \r\n  movelefttoright(){\r\n    if(this.selection != null && this.selection!=\"\"){\r\n  this.destination.push(this.selection)\r\n  this.source = this.source.filter(obj => obj !== this.selection);\r\n  this.selection='';\r\n    }\r\n  }\r\n  moverighttoleft(){\r\n     if(this.destinationSelection != null && this.destinationSelection!=\"\"){\r\n    this.source.push(this.destinationSelection)\r\n  this.destination = this.destination.filter(obj => obj !== this.destinationSelection);\r\n  this.destinationSelection='';\r\n     }\r\n  }\r\n  sendSelectedData(){\r\n    this.dialogRef.close(this.destination);\r\n  }\r\n  closeDialog() {\r\n    this.dialogRef.close(this.destination);\r\n  }\r\n}\r\n","export default \":host {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin: 100px 0px;\\r\\n  }\\r\\n\\r\\n  .mat-form-field {\\r\\n    width: 100%;\\r\\n    min-width: 300px;\\r\\n  }\\r\\n\\r\\n  mat-card-title,\\r\\n  mat-card-content {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n  }\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsZ0JBQWdCO0VBQ2xCOztFQUVBOztJQUVFLGFBQWE7SUFDYix1QkFBdUI7RUFDekIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDEwMHB4IDBweDtcclxuICB9XHJcblxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1pbi13aWR0aDogMzAwcHg7XHJcbiAgfVxyXG5cclxuICBtYXQtY2FyZC10aXRsZSxcclxuICBtYXQtY2FyZC1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIFxyXG5cclxuXHJcbiAgIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppComponent} from '../../app.component';\r\nimport { LoginService } from '../../services/login.service';\r\nimport { MatProgressButtonOptions } from 'mat-progress-buttons';\r\nimport { throwMatDialogContentAlreadyAttachedError } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  UserDetails:any= [\r\n    {\r\n      \"UserName\": \"testadmin\",\r\n      \"Password\": \"testadmin\",\r\n      \"Role\": \"Admin\"\r\n    },\r\n    {\r\n      \"UserName\": \"testbanker\",\r\n      \"Password\": \"testbanker\",\r\n      \"Role\": \"Banker\"\r\n    }\r\n  ];\r\n  loginForm: FormGroup;\r\nloading = false;\r\nsubmitted = false;\r\nreturnUrl: string;\r\nerrorMsg:string;\r\n\r\nspinnerButtonOptions: MatProgressButtonOptions = {\r\n  active: false,\r\n  text: 'Login',\r\n  spinnerSize: 18,\r\n  raised: true,\r\n  stroked: false,\r\n  buttonColor: 'primary',\r\n  spinnerColor: 'accent',\r\n  fullWidth: false,\r\n  disabled: false,\r\n  mode: 'indeterminate',\r\n  buttonIcon: {\r\n    fontIcon: 'fingerprint'\r\n  }\r\n}\r\n \r\nconstructor(\r\nprivate app: AppComponent,\r\nprivate formBuilder: FormBuilder,\r\nprivate route: ActivatedRoute,\r\nprivate router: Router,\r\nprivate loginService : LoginService,\r\n// private toastr: ToastrService\r\n) { }\r\n \r\nngOnInit() {\r\nthis.loginForm = this.formBuilder.group({\r\nemail: ['', Validators.required],\r\npassword: ['', Validators.required]\r\n});\r\n\r\nthis.app.logout();\r\n \r\n}\r\n \r\n// for accessing to form fields\r\nget fval() { return this.loginForm.controls; }\r\n \r\nonFormSubmit() {\r\nthis.submitted = true;\r\nif (this.loginForm.invalid) {\r\n  (<any>Object).values(this.fval).forEach(control => {\r\n    control.markAsTouched();\r\n  });\r\nreturn;\r\n}\r\n\r\nthis.loading = true;\r\nthis.spinnerButtonOptions.active=true;\r\nvar data = this.UserDetails.find(x=>x.UserName==this.fval.email.value && x.Password == this.fval.password.value);\r\nif(data!=null && data !=undefined){\r\n  this.spinnerButtonOptions.active=false;\r\n  localStorage.setItem(\"loginUserDetails\",JSON.stringify(data));\r\n  this.app.userDetails=data;\r\n  this.router.navigate(['/home']);\r\n}\r\nelse{\r\n  this.errorMsg=\"Invalid Username or Password.\";\r\n  this.spinnerButtonOptions.active=false;\r\n}\r\n// this.loginService.login(this.fval.email.value, this.fval.password.value)\r\n// .subscribe(\r\n// data => {\r\n// if(data!=null && data !=undefined && data.length > 0){\r\n//   this.spinnerButtonOptions.active=false;\r\n//   localStorage.setItem(\"loginUserDetails\",JSON.stringify(data[0]));\r\n//   this.app.userDetails=data[0];\r\n//   this.router.navigate(['/home']);\r\n// }\r\n// else{\r\n//   this.errorMsg=\"Invalid Username or Password.\";\r\n//   this.spinnerButtonOptions.active=false;\r\n// }\r\n\r\n// },\r\n// error => {\r\n// // this.toastr.error(error.error.message, 'Error'); \r\n// this.loading = false;\r\n// });\r\n}\r\n\r\n}\r\n","export default \".fieldset_style{\\r\\n    border: solid;\\r\\n    border-width: thin;\\r\\n    border-color: #efe6e6;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n.legend_style{\\r\\n    width: auto;\\r\\n    color: #7e7f80;\\r\\n    font-size: 14px;\\r\\n}\\r\\n/* ::ng-deep .clear-all c-icon{\\r\\n    display: none !important;;\\r\\n}\\r\\n::ng-deep .dropdown-list ul li {\\r\\n    padding: 5px !important;\\r\\n}\\r\\n::ng-deep.pure-checkbox input[type=\\\"checkbox\\\"]:checked + label:before {\\r\\n    background: maroon !important;\\r\\n}\\r\\n::ng-deep.selected-list .c-list .c-token {\\r\\n    background: maroon;\\r\\n}\\r\\n::ng-deep.pure-checkbox input[type=\\\"checkbox\\\"] + label:before {\\r\\n    color: maroon !important;\\r\\n    border: 1px solid maroon !important;\\r\\n}\\r\\n.multiselect-dropdown .dropdown-btn .selected-item {\\r\\n    border: 1px solid maroon !important;\\r\\n    background: maroon !important;\\r\\n    border-radius: 5px !important;\\r\\n}\\r\\n.multiselect-dropdown .dropdown-btn .selected-item a{\\r\\n    padding-top: 0px !important;\\r\\n    padding-right: 5px !important;\\r\\n    padding-left: 5px !important;\\r\\n    text-align: center  !important;\\r\\n    color: maroon !important;\\r\\n    background-color: white !important;\\r\\n    border-radius: 50% !important;\\r\\n}\\r\\n.multiselect-item-checkbox input[type=checkbox]:checked + div:before{\\r\\n    background: maroon !important;\\r\\n}\\r\\n.multiselect-item-checkbox input[type=checkbox] + div:before {\\r\\n    border: 2px solid maroon !important;\\r\\n} */\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9waXRjaGNyZWF0aW9uL3BpdGNoY3JlYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksV0FBVztJQUNYLGNBQWM7SUFDZCxlQUFlO0FBQ25CO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBbUNHIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9waXRjaGNyZWF0aW9uL3BpdGNoY3JlYXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWVsZHNldF9zdHlsZXtcclxuICAgIGJvcmRlcjogc29saWQ7XHJcbiAgICBib3JkZXItd2lkdGg6IHRoaW47XHJcbiAgICBib3JkZXItY29sb3I6ICNlZmU2ZTY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuLmxlZ2VuZF9zdHlsZXtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgY29sb3I6ICM3ZTdmODA7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuLyogOjpuZy1kZWVwIC5jbGVhci1hbGwgYy1pY29ue1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OztcclxufVxyXG46Om5nLWRlZXAgLmRyb3Bkb3duLWxpc3QgdWwgbGkge1xyXG4gICAgcGFkZGluZzogNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuOjpuZy1kZWVwLnB1cmUtY2hlY2tib3ggaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZDogbWFyb29uICFpbXBvcnRhbnQ7XHJcbn1cclxuOjpuZy1kZWVwLnNlbGVjdGVkLWxpc3QgLmMtbGlzdCAuYy10b2tlbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiBtYXJvb247XHJcbn1cclxuOjpuZy1kZWVwLnB1cmUtY2hlY2tib3ggaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdICsgbGFiZWw6YmVmb3JlIHtcclxuICAgIGNvbG9yOiBtYXJvb24gIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIG1hcm9vbiAhaW1wb3J0YW50O1xyXG59XHJcbi5tdWx0aXNlbGVjdC1kcm9wZG93biAuZHJvcGRvd24tYnRuIC5zZWxlY3RlZC1pdGVtIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIG1hcm9vbiAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZDogbWFyb29uICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHggIWltcG9ydGFudDtcclxufVxyXG4ubXVsdGlzZWxlY3QtZHJvcGRvd24gLmRyb3Bkb3duLWJ0biAuc2VsZWN0ZWQtaXRlbSBhe1xyXG4gICAgcGFkZGluZy10b3A6IDBweCAhaW1wb3J0YW50O1xyXG4gICAgcGFkZGluZy1yaWdodDogNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweCAhaW1wb3J0YW50O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyICAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IG1hcm9vbiAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJSAhaW1wb3J0YW50O1xyXG59XHJcbi5tdWx0aXNlbGVjdC1pdGVtLWNoZWNrYm94IGlucHV0W3R5cGU9Y2hlY2tib3hdOmNoZWNrZWQgKyBkaXY6YmVmb3Jle1xyXG4gICAgYmFja2dyb3VuZDogbWFyb29uICFpbXBvcnRhbnQ7XHJcbn1cclxuLm11bHRpc2VsZWN0LWl0ZW0tY2hlY2tib3ggaW5wdXRbdHlwZT1jaGVja2JveF0gKyBkaXY6YmVmb3JlIHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIG1hcm9vbiAhaW1wb3J0YW50O1xyXG59ICovXHJcbiJdfQ== */\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { MatProgressButtonOptions } from 'mat-progress-buttons';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray, NgForm } from '@angular/forms';\r\nimport { SnackbarService } from 'src/app/services/snackbar.service';\r\nimport { Subject, ReplaySubject } from 'rxjs';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { MatSelect } from '@angular/material';\r\nimport { MatDialog } from '@angular/material';\r\nimport { TeaminformatonComponent } from '../home/teaminformaton/teaminformaton.component';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { PitchcreationService } from '../../services/pitchcreation.service';\r\n\r\n@Component({\r\n  selector: 'app-pitchcreation',\r\n  templateUrl: './pitchcreation.component.html',\r\n  styleUrls: ['./pitchcreation.component.css']\r\n})\r\nexport class PitchcreationComponent implements OnInit,OnDestroy {\r\n\r\n  pitchCreationForm: FormGroup;\r\n  selectedTeamInfo:any='';\r\n  \r\n  public cpl1FilterCtrl: FormControl = new FormControl();\r\n  public teamInfoSearchCtrl:FormControl=new FormControl();\r\n  public industrySearchCtrl:FormControl=new FormControl();\r\n  public clientNameSearchCtrl:FormControl=new FormControl();\r\n  public filteredTeamInfo:ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\r\n  public filteredCPL2:any=[];\r\n  filterCPL1:any;\r\n  pitchMinDate:Date=new Date();\r\n  protected _onDestroy = new Subject<void>();\r\n  @ViewChild('multiSelect', { static: true }) multiSelect: MatSelect;\r\n  isSubmitted:boolean=false;\r\n  industrySearchText:any='';\r\n  clientNameSearchText:any='';\r\n  teamInfoDropdownSettings :any= {};\r\n  \r\n\r\n  industryJson = [\r\n    {\r\n      Name: 'Customer & Retail',\r\n      Value: 'Customer & Retail'\r\n    },\r\n    {\r\n      Name: 'Energy & Power',\r\n      Value: 'Energy & Power'\r\n    },\r\n    {\r\n      Name: 'Financial Institutions',\r\n      Value: 'Financial Institutions'\r\n    },\r\n    {\r\n      Name: 'Gaming',\r\n      Value: 'Gaming'\r\n    },\r\n    {\r\n      Name: 'Healthcare',\r\n      Value: 'Healthcare'\r\n    },\r\n    {\r\n      Name: 'Industrial',\r\n      Value: 'Industrial'\r\n    },\r\n    {\r\n      Name: 'RestFin',\r\n      Value: 'RestFin'\r\n    },\r\n    {\r\n      Name: 'Technology, Media & Telecom',\r\n      Value: 'Technology, Media & Telecom'\r\n    }\r\n\r\n  ]\r\n  clientNamesJson = [\r\n    {\r\n      Name: 'Test2424',\r\n      Value: 'Test2424'\r\n    },\r\n    {\r\n      Name: 'The kroger Co.',\r\n      Value: 'The kroger Co.'\r\n    }\r\n\r\n  ]\r\n\r\n  cpl1Json = [\r\n    {\r\n      Name: 'Deposits Other',\r\n      Value: 'Deposits Other'\r\n    },\r\n    {\r\n      Name: 'Fed Funds Deposits',\r\n      Value: 'Fed Funds Deposits'\r\n    },\r\n    {\r\n      Name: 'Interest Bearing DDAs',\r\n      Value: 'Interest Bearing DDAs'\r\n    },\r\n    {\r\n      Name: 'Non-Interest Bearing DDAs & Float',\r\n      Value: 'Non-Interest Bearing DDAs & Float'\r\n    },\r\n    {\r\n      Name: 'Structured Deposits',\r\n      Value: 'Structured Deposits'\r\n    },\r\n    {\r\n      Name: 'Sweep Balances',\r\n      Value: 'Sweep Balances'\r\n    },\r\n    {\r\n      Name: 'Time Deposits/Placements',\r\n      Value: 'Time Deposits/Placements'\r\n    },\r\n    \r\n\r\n\r\n  ]\r\n  cpl2Json = [\r\n    {\r\n      Name: 'Deposits Other  cpl2',\r\n      Value: 'Deposits Other  cpl2',\r\n      Base:'Deposits Other'\r\n    },\r\n    {\r\n      Name: 'Fed Funds Deposits  cpl2',\r\n      Value: 'Fed Funds Deposits  cpl2',\r\n      Base:'Deposits Other'\r\n    },\r\n    {\r\n      Name: 'Interest Bearing DDAs  cpl2',\r\n      Value: 'Interest Bearing DDAs  cpl2',\r\n      Base: 'Interest Bearing DDAs'\r\n    },\r\n    {\r\n      Name: 'Non-Interest Bearing DDAs & Float  cpl2',\r\n      Value: 'Non-Interest Bearing DDAs & Float  cpl2',\r\n      Base: 'Interest Bearing DDAs'\r\n    },\r\n    {\r\n      Name: 'Structured Deposits cpl2',\r\n      Value: 'Structured Deposits cpl2',\r\n      Base: 'Interest Bearing DDAs'\r\n    },\r\n    {\r\n      Name: 'Sweep Balances cpl2',\r\n      Value: 'Sweep Balances cpl2',\r\n      Base: 'Sweep Balances'\r\n    },\r\n    {\r\n      Name: 'Time Deposits/Placements cpl2',\r\n      Value: 'Time Deposits/Placements cpl2',\r\n      Base: 'Sweep Balances'\r\n    },\r\n    \r\n\r\n\r\n  ]\r\n  teamInfoJson:any[] = [\r\n    {\r\n      Name: 'James, Smith',\r\n      Value: 'James, Smith'\r\n    },\r\n    {\r\n      Name: 'Maria, Rodriguez',\r\n      Value: 'Maria, Rodriguez'\r\n    },\r\n    {\r\n      Name: 'James, Johnson',\r\n      Value: 'James, Johnson'\r\n    },\r\n    {\r\n      Name: 'Robert, Smith',\r\n      Value: 'Robert, Smith'\r\n    },\r\n    {\r\n      Name: 'Maria, Martinez',\r\n      Value: 'Maria, Martinez'\r\n    },\r\n    {\r\n      Name: 'IndusDavid, Smithtrial',\r\n      Value: 'David, Smith'\r\n    },\r\n    {\r\n      Name: 'Juan, Carlos',\r\n      Value: 'Juan, Carlos'\r\n    },\r\n    {\r\n      Name: 'Mike, Jones',\r\n      Value: 'Mike, Jones'\r\n    }\r\n\r\n  ]\r\n  \r\n\r\n  pitchSpinnerButtonOptions: MatProgressButtonOptions = {\r\n    active: false,\r\n    text: 'Create Pitch',\r\n    spinnerSize: 18,\r\n    raised: true,\r\n    stroked: false,\r\n    buttonColor: 'primary',\r\n    spinnerColor: 'accent',\r\n    fullWidth: false,\r\n    disabled: false,\r\n    mode: 'indeterminate',\r\n    // buttonIcon: {\r\n    //   fontIcon: 'add'\r\n    // }\r\n  }\r\n  constructor(public dialog: MatDialog, private formBuilder:FormBuilder,private pitchService:PitchcreationService, private snackBarService:SnackbarService) {\r\n    this.initResourceForm();\r\n   // this.teamInfoSearchCtrl.setValue('');\r\n  }\r\n  ngAfterViewInit() {\r\n    this.setInitialValue();\r\n  }\r\n  protected setInitialValue() {\r\n    this.filteredTeamInfo\r\n      .pipe(take(1), takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        \r\n        this.multiSelect.compareWith = (a: any, b: any) => a && b && a.id === b.id;\r\n      });\r\n  }\r\n\r\n  initResourceForm() {\r\n    this.pitchCreationForm = this.formBuilder.group({\r\n      Name: new FormControl('', Validators.required),\r\n      PitchDate: new FormControl('', Validators.required),\r\n      Industry: new FormControl('', Validators.required),\r\n      ClientName: new FormControl('', Validators.required),\r\n      ProductInfo:new FormArray([]),\r\n      TeamInfo:new FormControl('',Validators.required),\r\n      AdditionalTeamInfo:new FormControl(''),\r\n      CorpFinnInvolved:new FormControl('')\r\n\r\n    });\r\n    this.addProductInfoForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.teamInfoDropdownSettings = {\r\n      text: \"Select Team Info\",\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      enableCheckAll: false,\r\n      labelKey:'Name',\r\n      primaryKey:'Value',\r\n      enableSearchFilter:true,\r\n      classes: \"myclass custom-class\"\r\n  };\r\n    // this.teamInfoDropdownSettings = {\r\n    //   singleSelection: false,\r\n    //   idField: 'Value',\r\n    //   textField: 'Name',\r\n    //   enableCheckAll: false,\r\n    //   selectAllText: 'Select All',\r\n    //   unSelectAllText: 'UnSelect All',\r\n    //   allowSearchFilter: true,\r\n    //   limitSelection: -1,\r\n    //   clearSearchFilter: true,\r\n    //   maxHeight: 197,\r\n    //   itemsShowLimit: 3,\r\n    //   searchPlaceholderText: 'Search',\r\n    //   noDataAvailablePlaceholderText: 'No search result found.',\r\n    //   closeDropDownOnSelection: false,\r\n    //   showSelectedItemsAtTop: false,\r\n    //   defaultOpen: false\r\n    // };\r\n    // this.f.TeamInfo.setValue([this.teamInfoJson[1], this.teamInfoJson[2]]);\r\n    this.filteredTeamInfo.next(this.teamInfoJson.slice());\r\n    this.filteredCPL2=this.cpl2Json;\r\n    // this.filteredTeamInfo=this.teamInfoJson;\r\n  console.log(this.filteredTeamInfo)\r\nthis.industrySearchCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(()=>{\r\n  this.industrySearchText = this.industrySearchCtrl.value;\r\n});\r\nthis.clientNameSearchCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(()=>{\r\n  this.clientNameSearchText = this.clientNameSearchCtrl.value;\r\n})\r\n  this.teamInfoSearchCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(()=>{\r\n    this.filterTeamInfo();\r\n  })\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n  onItemSelect(item: any) {\r\n    console.log(item);\r\n  }\r\n  onSelectAll(items: any) {\r\n    console.log(items);\r\n  }\r\n  CPL1OnChange(val){\r\nthis.filteredCPL2=this.cpl2Json.filter(x=> x.Base == val);\r\n  }\r\n  \r\n  get f(){\r\n    return this.pitchCreationForm.controls;\r\n  }\r\n  get productInfoForm(){\r\n    return this.f.ProductInfo as FormArray;\r\n  }\r\n  cplKeyPress(event,index,name)\r\n  {\r\n    if(name == 'CPL1')\r\n    this.productInfoForm.controls[index]['value'].CPL1='';\r\n    else\r\n    this.productInfoForm.controls[index]['value'].CPL2='';\r\n    \r\n    this.productInfoForm.controls[index]['controls'][name].status='INVALID';\r\n    this.productInfoForm.controls[index]['controls'][name].value='';\r\n    event.target.value='';\r\n    event.preventDefault();\r\n  }\r\n  addProductInfoForm(){\r\n    if(!this.f.ProductInfo.invalid)\r\n    {\r\n      this.productInfoForm.push(this.formBuilder.group({\r\n        CPL1:['', Validators.required],\r\n        CPL2:['',Validators.required]\r\n      }));\r\n\r\n     \r\n      for (let index = 0; index <  this.productInfoForm.controls.length; index++) {\r\n        var element =  this.productInfoForm.controls[index];\r\n        console.log('checking start')\r\n         console.log(element['controls'].CPL1.status)\r\n        // console.log(element.controls.status)\r\n        \r\n      }     \r\n    }\r\n  }\r\n  removeProductInfoForm(index){\r\n    this.productInfoForm.removeAt(index);\r\n  }\r\n  removeAllProductInfoForm(){\r\n    for(var i=this.productInfoForm.length-1 ; i>= 0 ; i--)\r\n    {\r\n      this.productInfoForm.removeAt(i);\r\n    }\r\n    this.addProductInfoForm();\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n \r\n\r\n  resetResourceFrom() {\r\n     this.pitchCreationForm.reset();\r\n     this.pitchCreationForm.clearValidators();\r\n    this.pitchCreationForm.updateValueAndValidity();\r\n     this.initResourceForm();\r\n  }\r\n \r\n  checkProductFormValidations(){\r\n    if(this.productInfoForm.invalid){\r\n      (<any>Object).values(this.productInfoForm.controls).forEach(controls => {\r\n        (<any>Object).values(controls.controls).forEach(control => {\r\n          control.markAsTouched();\r\n        });\r\n       \r\n\r\n      });\r\n    }\r\n  }\r\n  createResource(form) {\r\n    this.isSubmitted=true;\r\n    if (this.pitchCreationForm.invalid) {\r\n      this.pitchCreationForm.markAllAsTouched();\r\n      // (<any>Object).values(this.f).forEach(control => {\r\n      //   debugger\r\n      //   control.markAsTouched();\r\n      // });\r\n      // this.checkProductFormValidations();\r\n      return;\r\n    }\r\n    this.pitchSpinnerButtonOptions.active = true;\r\n    alert(JSON.stringify(this.pitchCreationForm.value));\r\n    this.pitchService.createpitch(this.pitchCreationForm.value).subscribe(result=>{\r\n      this.snackBarService.message=\"Pitch creation successfully created.\"\r\n\r\n      this.snackBarService.showSnackbar();\r\n      this.pitchSpinnerButtonOptions.active = false;\r\n      this.isSubmitted=false;\r\n      form.resetForm();\r\n       this.initResourceForm();\r\n    });\r\n   \r\n\r\n  }\r\n \r\n  public filterTeamInfo() {\r\n    if (!this.teamInfoJson) {\r\n      return;\r\n    }\r\n    // get the search keyword\r\n    let search = this.teamInfoSearchCtrl.value;\r\n    if (!search) {\r\n      this.filteredTeamInfo.next(this.teamInfoJson.slice());\r\n      return;\r\n    } else {\r\n      search = search.toLowerCase();\r\n    }\r\n    // filter the banks\r\n    this.filteredTeamInfo.next(\r\n      this.teamInfoJson.filter(bank => bank.Name.toLowerCase().indexOf(search) > -1)\r\n    );\r\n  }\r\n\r\n  clearAdditionalTeamInfo()\r\n  {\r\n    this.f.AdditionalTeamInfo.setValue('');\r\n  }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(TeaminformatonComponent, {\r\n      width: '60%',\r\n      data:this.teamInfoJson\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      // this.selectedTeamInfo = result;\r\n      \r\n      if(result != null && result.length > 0){\r\n        this.selectedTeamInfo='';\r\n      result.forEach(element => {\r\n        // this.selectedTeamInfo+=element.Name + ', ';\r\n         this.selectedTeamInfo +=element.Name+ '\\n' + '\\n';\r\n      });\r\n      this.f[\"AdditionalTeamInfo\"].setValue(this.selectedTeamInfo);\r\n    }\r\n     \r\n    });\r\n\r\n  }\r\n}\r\n","export default \".gh{\\r\\n    font: 100;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9yZWxhdGlvbnNoaXBjcmVhdGlvbi9yZWxhdGlvbnNoaXBjcmVhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksU0FBUztBQUNiIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZWxhdGlvbnNoaXBjcmVhdGlvbi9yZWxhdGlvbnNoaXBjcmVhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdoe1xyXG4gICAgZm9udDogMTAwO1xyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup ,FormBuilder, FormControl, Validators, FormArray, NgForm } from '@angular/forms';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {PitchcreationService} from '../../services/pitchcreation.service';\r\nimport { MatProgressButtonOptions } from 'mat-progress-buttons';\r\nimport { SnackbarService } from '../../services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-relationshipcreation',\r\n  templateUrl: './relationshipcreation.component.html',\r\n  styleUrls: ['./relationshipcreation.component.css']\r\n})\r\nexport class RelationshipcreationComponent implements OnInit {\r\n\r\n  relationshipForm: FormGroup;\r\n  public coverageteamSearchCtrl:FormControl=new FormControl();\r\n  public idustrySearchCtrl:FormControl=new FormControl();\r\n  public subIndustrySearchCtrl:FormControl=new FormControl()\r\n  isFromOther:boolean=false;\r\n  coverageTeamSearchText:any='';\r\n  idustrySearchText:any='';\r\n  subIndustrySearchText:any='';\r\n  protected _onDestroy = new Subject<void>();\r\n  coverageTeamInfoJSON:any;\r\n  idustryJSON:any;\r\n  isSubmitted:boolean=false;\r\n  subIndustryInfoJSON:any;\r\n  // =[\r\n  //   {\r\n  //     Name:\"Energy\",Value:\"Energy\"\r\n  //   },\r\n  //   {\r\n  //     Name:\"Consumer Products\",Value:\"Consumer Products\"\r\n  //   }\r\n  // ]\r\n  relationSpinnerButtonOptions: MatProgressButtonOptions = {\r\n    active: false,\r\n    text: 'Submit',\r\n    spinnerSize: 18,\r\n    raised: true,\r\n    stroked: false,\r\n    buttonColor: 'primary',\r\n    spinnerColor: 'accent',\r\n    fullWidth: false,\r\n    disabled: false,\r\n    mode: 'indeterminate',\r\n  }\r\n\r\n  @Input('childToMaster') masterName: any;\r\n  constructor(private formBuilder:FormBuilder,private relationshipService:PitchcreationService,private snackbarService:SnackbarService) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"masterName :\"+ this.masterName)\r\n    this.initializeForm()\r\n   \r\n    this.coverageteamSearchCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(()=>{\r\n      this.coverageTeamSearchText = this.coverageteamSearchCtrl.value;\r\n    });\r\n    this.idustrySearchCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(()=>{\r\n      this.idustrySearchText = this.idustrySearchCtrl.value;\r\n    });\r\n    this.subIndustrySearchCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(()=>{\r\n      this.subIndustrySearchText = this.subIndustrySearchCtrl.value;\r\n    });\r\n    \r\n    this.getCoverageTeamInfo();\r\n    this.getIdustryInfo();\r\n    this.getSubIndustryInfo();\r\n\r\n    if(this.masterName != null && this.masterName !=undefined && this.masterName !='undefined' && this.masterName !='')\r\n    {\r\n      this.isFromOther=true;\r\n      this.f['ClientName'].setValue(this.masterName.clientName);\r\n      this.f['Industry'].setValue(this.masterName.industry);\r\n      this.f['SubIndustry'].setValue(this.masterName.subIndustry);\r\n    }\r\n  }\r\n\r\n  get f(){\r\n    return this.relationshipForm.controls;\r\n  }\r\ninitializeForm(){\r\n  this.relationshipForm = this.formBuilder.group({\r\n    ClientName: new FormControl('', Validators.required),\r\n    // CoverageTeam: new FormControl('', Validators.required),\r\n    // RelationshipType: new FormControl('', Validators.required),\r\n    Industry: new FormControl('', Validators.required),\r\n    SubIndustry:new FormControl('',Validators.required)\r\n  });\r\n}\r\n  getCoverageTeamInfo(){\r\nthis.relationshipService.getCoverageTeamInfo().subscribe(result=>{\r\nthis.coverageTeamInfoJSON=result;\r\n});\r\n  }\r\n  getIdustryInfo(){\r\n    this.relationshipService.getIndustryDetails().subscribe(result=>{\r\n      this.idustryJSON=result;\r\n    })\r\n  }\r\n  getSubIndustryInfo(){\r\n    this.relationshipService.getSubIndustryDetails().subscribe(result=>{\r\n      this.subIndustryInfoJSON=result;\r\n    })\r\n  }\r\n  createRelationship(form){\r\n    \r\n    if (this.relationshipForm.invalid) {\r\n      this.isSubmitted=true;\r\n      this.relationshipForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    var obj={\r\n      clientId:\"0\",\r\n      clientName:this.f['ClientName'].value,\r\n      creationUserName:\"u364882\",\r\n      dctmClientId:null,\r\n      ibParent:\"Targa Energy Power\",\r\n      ibParentId:\"5572\",\r\n      icisClientId:\"233536503\",\r\n      industry:this.f['Industry'].value,\r\n      industryKey:\"E&P\",\r\n      subIndustry:this.f['SubIndustry'].value,\r\n      subIndustryKey:\"ENGY\",\r\n      region:\"\",\r\n      sector:\"Midstream\",\r\n      parentRelationship:null,\r\n      relationshipManager:null,\r\n      portfolioManager:null,\r\n      relationshipAssociate:null,\r\n      subSector:\"Liquids Gathering, Logistics, Terminaling & Storage\",\r\n      loadSupervisor:null,\r\n      callingApplication:\"ICATCH\",\r\n      targetApplication:\"IBCM\",\r\n      isDeleted:\"N\",\r\n      CreatedDate:\"11/4/2019 10:50:12 AM\",\r\n      LastModifiedDate:null,\r\n      LastModifiedById:null,\r\n      subSectorKey:\"\",\r\n      sectorKey:\"\",\r\n      isSponsor:\"N\"\r\n    }\r\n    this.relationSpinnerButtonOptions.active=true;\r\n    this.relationshipService.createRelationship(obj).subscribe(result=>{\r\n      this.isSubmitted=false;\r\n      this.relationSpinnerButtonOptions.active=false;\r\n      this.snackbarService.message=result.IBCM.responseMessage;\r\n      this.snackbarService.showSnackbar();\r\n      form.resetForm();\r\n    \r\n    })\r\n  }\r\n\r\n}\r\n","import { FormArray, FormGroup } from '@angular/forms';\r\n\r\n// Default dev URLs\r\n\r\nlet apiURL = 'https://ibcm-d2-qa.wellsfargo.net/cibservices';\r\nlet jsonServerUrl=\" http://localhost:3200\";\r\nif (window.location.href.indexOf('appdev.lapalopa.com') >= 0) {\r\n    // Dev Settings\r\n    apiURL = 'https://appdev.lapalopa.com/dashboard';\r\n} else if (window.location.href.indexOf('appstg.lapalopa.com') >= 0) {\r\n    // Staging Settings\r\n    apiURL = 'https://ibcm-d2-qa.wellsfargo.net/cibservices';\r\n    jsonServerUrl = 'https://mobileapistg.lapalopa.com';\r\n} else if (window.location.href.indexOf('app.lapalopa.com') >= 0) {\r\n    // Production Settings\r\n    apiURL = 'https://api.lapalopa.com';\r\n    jsonServerUrl = 'https://login.lapalopa.com';\r\n}\r\nelse if (window.location.href.indexOf('http://localhost') >= 0) {\r\n    apiURL = 'https://ibcm-d2-qa.wellsfargo.net/cibservices';\r\n    jsonServerUrl = 'http://localhost:3200/';\r\n\r\n}\r\n\r\n// ******************************************************************\r\n// Service URL\r\nexport const baseApiUrl: string = apiURL;\r\nexport const baseJsonServerUrl: string = jsonServerUrl;\r\n\r\n// ******************************************************************","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatButtonModule, MatCheckboxModule,MatPaginatorModule,MatSortModule,\r\n  MatFormFieldModule, MatInputModule,MatAutocompleteModule,MatTooltipModule,\r\n  MatTableModule, MatToolbarModule, MatIconModule, MatTabsModule, MatExpansionModule, MatGridListModule, MatCardModule, MatRadioModule\r\n  , MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatProgressSpinnerModule, MatSnackBarModule, MatDialogModule, MatMenuModule,\r\n  MatDividerModule, MatSlideToggleModule, MatListModule\r\n} from '@angular/material';\r\nimport  {MatProgressButtonsModule} from 'mat-progress-buttons';\r\n\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nconst modules = [\r\n  MatButtonModule, MatCheckboxModule,MatAutocompleteModule,NgxMatSelectSearchModule,\r\n  MatFormFieldModule, MatInputModule,MatPaginatorModule,MatSortModule,MatTooltipModule,\r\n  MatTableModule, MatToolbarModule, MatIconModule, MatTabsModule, MatExpansionModule, MatGridListModule, MatCardModule, MatRadioModule\r\n  , MatSelectModule, MatDatepickerModule, MatNativeDateModule, MatProgressSpinnerModule, MatSnackBarModule, MatDialogModule, MatMenuModule,\r\n  MatDividerModule, MatSlideToggleModule, MatListModule,MatProgressButtonsModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    modules\r\n  ],\r\n  exports:[\r\n    modules\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'listfilter'\r\n})\r\nexport class ListfilterPipe implements PipeTransform {\r\n\r\n  transform(items: any[], searchText: string): any[] {\r\n    if(!items) return [];\r\n    if(!searchText) return items;\r\nsearchText = searchText.toLowerCase();\r\nreturn items.filter( obj => {\r\n      return obj.Name.toLowerCase().includes(searchText);\r\n    });\r\n   }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddclientService {\r\n  baseUrl=\"http://localhost:3200/\";\r\n  constructor(private _http:HttpClient) { }\r\n\r\n  searchSalesforceClients(data):Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getSalesforceClients')\r\n      //  return this._http.get('api/client?searchtext=' + data)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CredittransactionService {\r\n  baseUrl=\"http://localhost:3200/\";\r\n  constructor(private _http:HttpClient) { }\r\n\r\n  getIndustryDetails(): Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getIndustry');\r\n  }\r\n  getClientName(): Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getCreditClientNames');\r\n  }\r\ngetReportTypes():Observable<any>{\r\n  return this._http.get<any>(this.baseUrl+'getCreditTransactionReportTypes');\r\n}\r\ngetCreditCPL1():Observable<any>{\r\n  return this._http.get<any>(this.baseUrl+'getCreditCPL1');\r\n}\r\ngetCreditCPL2():Observable<any>{\r\n  return this._http.get<any>(this.baseUrl+'getCreditCPL2');\r\n}\r\ngetCreditTransactionTeams():Observable<any>{\r\n  return this._http.get<any>(this.baseUrl+'getCreditTransactionTeams');\r\n}\r\n\r\ncreateCreditTransaction(data):Observable<any>{\r\n  return this._http.post<any>(this.baseUrl+'createCreditTransaction',data);\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {baseJsonServerUrl} from '../config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\nbaseUrl=\"http://localhost:3200/\";\r\n  constructor(private _http:HttpClient) { }\r\n\r\n  login(username, password): Observable<any>{\r\n    return this._http.get<any>(baseJsonServerUrl+'getUserDetails?UserName='+username+'&Password='+password)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PitchcreationService {\r\n\r\n  baseUrl=\"http://localhost:3200/\";\r\n\r\n  constructor(private _http:HttpClient) {\r\n  \r\n   }\r\n\r\n  getIndustryDetails(): Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getIndustry');\r\n  }\r\n  getClientNames():Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getClientNames');\r\n  }\r\n  getCpl1Details():Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getCPL1Details');\r\n  }\r\n  getCPL2FilteredDetails(val):Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getCPL2Details?Base='+val);\r\n  }\r\n  getTeamInfoDetails():Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getTeamInfoDetails')\r\n  }\r\n  getAdditionalTeamInfo():Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getAdditionalTeamInfo');\r\n  }\r\n  createpitch(data):Observable<any>{\r\n    return this._http.post<any>(this.baseUrl+'pitchcreation',data);\r\n  }\r\n\r\n\r\n  getCoverageTeamInfo():Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getTeamInfoDetails')\r\n  }\r\n  getSubIndustryDetails():Observable<any>{\r\n    return this._http.get<any>(this.baseUrl+'getSubIndustry')\r\n  }\r\n  createRelationship(data):Observable<any>{\r\n    return this._http.post<any>(this.baseUrl+'createRelationship',data)\r\n      // return this._http.post('api/client',data)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarConfig,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackbarService {\r\n  message: string = '';\r\n  actionButtonLabel: string = '';\r\n  action: boolean = false;\r\n  setAutoHide: boolean = true;\r\n  autoHide: number = 2000;\r\n  horizontalPosition: MatSnackBarHorizontalPosition = 'end';\r\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\r\n  constructor(public snackBar: MatSnackBar) {\r\n  }\r\n   showSnackbar() {\r\n    let config = new MatSnackBarConfig();\r\n    config.verticalPosition = this.verticalPosition;\r\n    config.horizontalPosition = this.horizontalPosition;\r\n    config.duration = this.setAutoHide ? this.autoHide : 0;\r\n    // config.extraClasses = this.addExtraClass ? ['test'] : undefined;\r\n    this.snackBar.open(this.message, this.action ? this.actionButtonLabel : undefined, config);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}